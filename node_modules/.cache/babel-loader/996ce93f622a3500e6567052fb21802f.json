{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\ficha\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\components\\\\LugarResidenciaActual.jsx\";\nimport React from \"react\";\nimport { Form, Input, Select, Layout } from \"antd\";\nconst TextArea = Input.TextArea;\nconst Option = Select.Option;\nconst initttt = {\n  mode: \"no-cors\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n};\nconst apiUrl = \"http://192.168.0.5/FichaDatos/FichaWeb/modules\"; // const apiUrl = 'https://net.upt.edu.pe/FichaDatos/FichaWeb/modules';\n\nclass LugarResidenciaActual extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.siguiente = e => {\n      e.preventDefault();\n      this.props.siguiente();\n    };\n\n    this.regresar = e => {\n      e.preventDefault();\n      this.props.regresar();\n    };\n\n    this.getCiudades = async () => {\n      // await fetch(\n      //   `${apiUrl}/Ciudad.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589`\n      // )\n      //   .then(response => response.json())\n      //   .then(data => this.setState({ ciudades: data }));\n      const ciudades = [];\n\n      for (let index = 0; index < this.state.ciudadesRes.length; index++) {\n        if (this.state.ciudadesRes[index].relacion == 9589) {\n          ciudades.push(this.state.ciudadesRes[index]);\n        }\n      }\n\n      if (ciudades.length > 0) {\n        await this.setState({\n          ciudades: ciudades\n        });\n      } else {\n        await this.setState({\n          ciudades: [],\n          ficha: _objectSpread({}, this.state.ficha, {\n            id_nac_ciudad_per: \"-------\",\n            id_nac_provincia_per: \"-------\"\n          })\n        });\n      }\n    };\n\n    this.getProvincias = async () => {\n      const provincias = [];\n\n      for (let index = 0; index < this.state.provinciasRes.length; index++) {\n        if (this.state.provinciasRes[index].relacion == this.state.ficha.id_res_ciudad_per) {\n          provincias.push(this.state.provinciasRes[index]);\n        }\n      }\n\n      if (provincias.length > 0) {\n        await this.setState({\n          provincias: provincias\n        });\n      } // await fetch(\n      //   `${apiUrl}/Provincia.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idCiudad=2919`\n      // )\n      //   .then(response => response.json())\n      //   .then(data => this.setState({ provincias: data }));\n\n    };\n\n    this.getDistritos = async () => {\n      const distritos = [];\n\n      for (let index = 0; index < this.state.distritosRes.length; index++) {\n        if (this.state.distritosRes[index].CodDistProv == this.state.ficha.id_res_provincia_per) {\n          distritos.push(this.state.distritosRes[index]);\n        }\n      }\n\n      if (distritos.length > 0) {\n        await this.setState({\n          distritos: distritos\n        });\n      } // await fetch(\n      //   `${apiUrl}/Distrito.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589&idCiudad=2919&idProvincia=2301`\n      // )\n      //   .then(response => response.json())\n      //   .then(data => this.setState({ distritos: data }));\n\n    };\n\n    this.getDependencias = async () => {\n      await fetch(\"\".concat(apiUrl, \"/DependenciaVivienda.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ)).then(response => response.json()).then(data => this.setState({\n        dependencias: data\n      }));\n    };\n\n    this.handleSelectedCiudad = async e => {\n      await this.setState({\n        ficha: _objectSpread({}, this.state.ficha, {\n          id_nac_ciudad_per: e\n        })\n      });\n      await this.getProvincias();\n    };\n\n    this.handleSelectedProvincia = async e => {\n      await this.setState({\n        ficha: _objectSpread({}, this.state.ficha, {\n          id_nac_provincia_per: e\n        })\n      });\n      await this.getDistritos();\n    };\n\n    this.state = {\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      dependencias: [],\n      ciudadesRes: [],\n      provinciasRes: [],\n      distritosRes: [],\n      session: this.props.session,\n      cod_univ: this.props.cod_univ\n    };\n  }\n\n  async componentDidMount() {\n    const _this$props = this.props,\n          ciudades = _this$props.ciudades,\n          provincias = _this$props.provincias,\n          distritos = _this$props.distritos;\n    await this.setState({\n      ciudades: ciudades,\n      provincias: provincias,\n      distritos: distritos\n    });\n    await this.getCiudades();\n    await this.getProvincias();\n    await this.getDistritos(); // this.getDependencias();\n  }\n\n  render() {\n    // const { dependencias } = this.state;\n    // const { provincias } = this.state;\n    // const { distritos } = this.state;\n    const _this$props2 = this.props,\n          ficha = _this$props2.ficha,\n          handleChangeInput = _this$props2.handleChangeInput,\n          handleChangeSelect = _this$props2.handleChangeSelect;\n    const _this$state = this.state,\n          ciudades = _this$state.ciudades,\n          provincias = _this$state.provincias,\n          distritos = _this$state.distritos,\n          dependencias = _this$state.dependencias;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Layout, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, getFieldDecorator(\"ciudad\", {\n      initialValue: ficha.id_res_ciudad_per === \"\" || ficha.id_res_ciudad_per == null ? 2919 : ficha.id_res_ciudad_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la ciudad.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione la ciudad donde reside\",\n      onChange: handleChangeSelect(\"id_res_ciudad_per\"),\n      onSelect: this.handleSelectedCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, getFieldDecorator(\"provincia\", {\n      initialValue: ficha.id_res_provincia_per === \"\" || ficha.id_res_provincia_per == null ? 2301 : ficha.id_res_provincia_per,\n      rules: [{\n        required: true,\n        message: \"Seleccione la provincia donde reside.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Provincia\",\n      onChange: handleChangeSelect(\"id_res_provincia_per\"),\n      onSelect: this.handleSelectedProvincia,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, provincia.descripcion))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, getFieldDecorator(\"distrito\", {\n      initialValue: ficha.id_res_distrito_per === \"\" || ficha.id_res_distrito_per == null ? 230101 : ficha.id_res_distrito_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione el distrito.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Distrito\",\n      onChange: handleChangeSelect(\"id_res_distrito_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, distritos.map(distrito => React.createElement(Option, {\n      value: distrito.CodDist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, distrito.descripcion))))), React.createElement(Form.Item, {\n      label: \"Direcci\\xF3n de Domicilio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, getFieldDecorator(\"direccionDomicilio\", {\n      initialValue: ficha.res_direccion_per,\n      rules: [{\n        required: true,\n        message: \"Por registre su direcci√≥n.\"\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      onChange: handleChangeInput(\"res_direccion_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Referencia de Domicilio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, getFieldDecorator(\"referenciaDomicilio\", {\n      initialValue: ficha.res_referencia_per,\n      rules: [{\n        required: true,\n        message: \"Por favor registre la referencia de su domicilio.\"\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      onChange: handleChangeInput(\"res_referencia_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Tel\\xE9fono de Referencia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, getFieldDecorator(\"telefonoReferencia\", {\n      initialValue: ficha.res_telefono_per,\n      rules: [{\n        required: true,\n        message: \"Por favor ingrese un tel√©fono de referencia.\"\n      }]\n    })(React.createElement(Input, {\n      onChange: handleChangeInput(\"res_telefono_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Vive en:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, getFieldDecorator(\"dependencia\", {\n      initialValue: ficha.id_dependencia_vivienda === \"\" || ficha.id_dependencia_vivienda == null ? 1 : ficha.id_dependencia_vivienda,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione una dependencia.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione:\",\n      onChange: handleChangeSelect(\"id_dependencia_vivienda\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, dependencias.map(dependencia => React.createElement(Option, {\n      value: dependencia.id_dependencia_vivienda,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, dependencia.descripcion)))))));\n  }\n\n}\n\nexport default Form.create()(LugarResidenciaActual);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\components\\LugarResidenciaActual.jsx"],"names":["React","Form","Input","Select","Layout","TextArea","Option","initttt","mode","headers","Accept","apiUrl","LugarResidenciaActual","Component","constructor","props","siguiente","e","preventDefault","regresar","getCiudades","ciudades","index","state","ciudadesRes","length","relacion","push","setState","ficha","id_nac_ciudad_per","id_nac_provincia_per","getProvincias","provincias","provinciasRes","id_res_ciudad_per","getDistritos","distritos","distritosRes","CodDistProv","id_res_provincia_per","getDependencias","fetch","session","cod_univ","then","response","json","data","dependencias","handleSelectedCiudad","handleSelectedProvincia","componentDidMount","render","handleChangeInput","handleChangeSelect","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","background","initialValue","rules","required","message","map","ciudad","CodCiudad","descripcion","provincia","CodProv","id_res_distrito_per","distrito","CodDist","res_direccion_per","res_referencia_per","res_telefono_per","id_dependencia_vivienda","dependencia","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Select, Layout } from \"antd\";\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst initttt = {\n  mode: \"no-cors\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n};\n\nconst apiUrl = \"http://192.168.0.5/FichaDatos/FichaWeb/modules\";\n// const apiUrl = 'https://net.upt.edu.pe/FichaDatos/FichaWeb/modules';\nclass LugarResidenciaActual extends React.Component {\n  siguiente = e => {\n    e.preventDefault();\n    this.props.siguiente();\n  };\n\n  regresar = e => {\n    e.preventDefault();\n    this.props.regresar();\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      dependencias: [],\n      ciudadesRes: [],\n      provinciasRes: [],\n      distritosRes: [],\n      session: this.props.session,\n      cod_univ: this.props.cod_univ\n    };\n  }\n\n  async componentDidMount() {\n    const { ciudades, provincias, distritos } = this.props;\n\n    await this.setState({\n      ciudades: ciudades,\n      provincias: provincias,\n      distritos: distritos\n    });\n    await this.getCiudades();\n    await this.getProvincias();\n    await this.getDistritos();\n    // this.getDependencias();\n  }\n\n  getCiudades = async () => {\n    // await fetch(\n    //   `${apiUrl}/Ciudad.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589`\n    // )\n    //   .then(response => response.json())\n    //   .then(data => this.setState({ ciudades: data }));\n    const ciudades = [];\n\n    for (let index = 0; index < this.state.ciudadesRes.length; index++) {\n      if (this.state.ciudadesRes[index].relacion == 9589) {\n        ciudades.push(this.state.ciudadesRes[index]);\n      }\n    }\n\n    if (ciudades.length > 0) {\n      await this.setState({\n        ciudades: ciudades\n      });\n    } else {\n      await this.setState({\n        ciudades: [],\n        ficha: {\n          ...this.state.ficha,\n          id_nac_ciudad_per: \"-------\",\n          id_nac_provincia_per: \"-------\"\n        }\n      });\n    }\n  };\n\n  getProvincias = async () => {\n    const provincias = [];\n    for (let index = 0; index < this.state.provinciasRes.length; index++) {\n      if (\n        this.state.provinciasRes[index].relacion ==\n        this.state.ficha.id_res_ciudad_per\n      ) {\n        provincias.push(this.state.provinciasRes[index]);\n      }\n    }\n    if (provincias.length > 0) {\n      await this.setState({\n        provincias: provincias\n      });\n    }\n\n    // await fetch(\n    //   `${apiUrl}/Provincia.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idCiudad=2919`\n    // )\n    //   .then(response => response.json())\n    //   .then(data => this.setState({ provincias: data }));\n  };\n\n  getDistritos = async () => {\n    const distritos = [];\n    for (let index = 0; index < this.state.distritosRes.length; index++) {\n      if (\n        this.state.distritosRes[index].CodDistProv ==\n        this.state.ficha.id_res_provincia_per\n      ) {\n        distritos.push(this.state.distritosRes[index]);\n      }\n    }\n    if (distritos.length > 0) {\n      await this.setState({\n        distritos: distritos\n      });\n    }\n    // await fetch(\n    //   `${apiUrl}/Distrito.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589&idCiudad=2919&idProvincia=2301`\n    // )\n    //   .then(response => response.json())\n    //   .then(data => this.setState({ distritos: data }));\n  };\n\n  getDependencias = async () => {\n    await fetch(\n      `${apiUrl}/DependenciaVivienda.php?p=read&session=${\n        this.state.session\n      }&CodUniv=${this.state.cod_univ}`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ dependencias: data }));\n  };\n\n  handleSelectedCiudad = async e => {\n    await this.setState({\n      ficha: {\n        ...this.state.ficha,\n        id_nac_ciudad_per: e\n      }\n    });\n    await this.getProvincias();\n  };\n\n  handleSelectedProvincia = async e => {\n    await this.setState({\n      ficha: {\n        ...this.state.ficha,\n        id_nac_provincia_per: e\n      }\n    });\n    await this.getDistritos();\n  };\n\n  render() {\n    // const { dependencias } = this.state;\n    // const { provincias } = this.state;\n    // const { distritos } = this.state;\n    const { ficha, handleChangeInput, handleChangeSelect } = this.props;\n    const { ciudades, provincias, distritos, dependencias } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Layout style={{ background: \"white\" }}>\n        <Form {...formItemLayout}>\n          <Form.Item label=\"Ciudad\">\n            {getFieldDecorator(\"ciudad\", {\n              initialValue:\n                ficha.id_res_ciudad_per === \"\" ||\n                ficha.id_res_ciudad_per == null\n                  ? 2919\n                  : ficha.id_res_ciudad_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la ciudad.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione la ciudad donde reside\"}\n                onChange={handleChangeSelect(\"id_res_ciudad_per\")}\n                onSelect={this.handleSelectedCiudad}\n              >\n                {ciudades.map(ciudad => (\n                  <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Provincia\">\n            {getFieldDecorator(\"provincia\", {\n              initialValue:\n                ficha.id_res_provincia_per === \"\" ||\n                ficha.id_res_provincia_per == null\n                  ? 2301\n                  : ficha.id_res_provincia_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Seleccione la provincia donde reside.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Provincia\"}\n                onChange={handleChangeSelect(\"id_res_provincia_per\")}\n                onSelect={this.handleSelectedProvincia}\n              >\n                {provincias.map(provincia => (\n                  <Option value={provincia.CodProv}>\n                    {provincia.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Distrito\">\n            {getFieldDecorator(\"distrito\", {\n              initialValue:\n                ficha.id_res_distrito_per === \"\" ||\n                ficha.id_res_distrito_per == null\n                  ? 230101\n                  : ficha.id_res_distrito_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione el distrito.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Distrito\"}\n                onChange={handleChangeSelect(\"id_res_distrito_per\")}\n              >\n                {distritos.map(distrito => (\n                  <Option value={distrito.CodDist}>\n                    {distrito.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Direcci√≥n de Domicilio\">\n            {getFieldDecorator(\"direccionDomicilio\", {\n              initialValue: ficha.res_direccion_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por registre su direcci√≥n.\"\n                }\n              ]\n            })(\n              <TextArea\n                rows={4}\n                onChange={handleChangeInput(\"res_direccion_per\")}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Referencia de Domicilio\">\n            {getFieldDecorator(\"referenciaDomicilio\", {\n              initialValue: ficha.res_referencia_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor registre la referencia de su domicilio.\"\n                }\n              ]\n            })(\n              <TextArea\n                rows={4}\n                onChange={handleChangeInput(\"res_referencia_per\")}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Tel√©fono de Referencia\">\n            {getFieldDecorator(\"telefonoReferencia\", {\n              initialValue: ficha.res_telefono_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un tel√©fono de referencia.\"\n                }\n              ]\n            })(<Input onChange={handleChangeInput(\"res_telefono_per\")} />)}\n          </Form.Item>\n\n          <Form.Item label=\"Vive en:\">\n            {getFieldDecorator(\"dependencia\", {\n              initialValue:\n                ficha.id_dependencia_vivienda === \"\" ||\n                ficha.id_dependencia_vivienda == null\n                  ? 1\n                  : ficha.id_dependencia_vivienda,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione una dependencia.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione:\"}\n                onChange={handleChangeSelect(\"id_dependencia_vivienda\")}\n              >\n                {dependencias.map(dependencia => (\n                  <Option value={dependencia.id_dependencia_vivienda}>\n                    {dependencia.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default Form.create()(LugarResidenciaActual);\n"]},"metadata":{},"sourceType":"module"}