{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\components\\\\NivelEducativo.jsx\";\nimport React from \"react\";\nimport { Form, Select, Layout } from \"antd\";\nconst Option = Select.Option;\nconst initttt = {\n  mode: \"no-cors\",\n  headers: {\n    'Content-Type': 'application/json',\n    \"Accept\": 'application/json'\n  }\n};\nconst apiUrl = 'http://localhost/FichaDatos/FichaWeb/modules'; // const apiUrl = 'https://net.upt.edu.pe/FichaDatos/FichaWeb/modules';\n\nclass NivelEducativo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.siguiente = e => {\n      e.preventDefault();\n      this.props.siguiente();\n    };\n\n    this.regresar = e => {\n      e.preventDefault();\n      this.props.regresar();\n    };\n\n    this.getPaises = async () => {\n      await fetch(\"\".concat(apiUrl, \"/Nacionalidad.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ)).then(response => response.json()).then(data => this.setState({\n        nacionalidades: data\n      }));\n    };\n\n    this.getCiudades = async () => {\n      await fetch(\"\".concat(apiUrl, \"/Ciudad.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ, \"&idPais=9589\")).then(response => response.json()).then(data => this.setState({\n        ciudades: data\n      }));\n    };\n\n    this.getProvincias = async () => {\n      await fetch(\"\".concat(apiUrl, \"/Provincia.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ, \"&idCiudad=2919\")).then(response => response.json()).then(data => this.setState({\n        provincias: data\n      }));\n    };\n\n    this.getDistritos = async () => {\n      await fetch(\"\".concat(apiUrl, \"/Distrito.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ, \"&idPais=9589&idCiudad=2919&idProvincia=2301\")).then(response => response.json()).then(data => this.setState({\n        distritos: data\n      }));\n    };\n\n    this.getInstituciones = async () => {\n      await fetch(\"\".concat(apiUrl, \"/NivelEducativo.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ, \"&nivel=1&idPais=9589&idCiudad=2919&idProvincia=2301&idDistrito=230101\")).then(response => response.json()).then(data => this.setState({\n        instituciones: data\n      }));\n    };\n\n    this.state = {\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      instituciones: [],\n      session: this.props.session,\n      cod_univ: this.props.cod_univ\n    };\n  }\n\n  componentDidMount() {// this.getPaises();\n    // this.getCiudades();\n    // this.getProvincias();\n    // this.getDistritos();\n    // this.getInstituciones();\n  }\n\n  render() {\n    // const { nacionalidades } = this.state;\n    // const { ciudades } = this.state;\n    // const { provincias } = this.state;\n    // const { distritos } = this.state;\n    const _this$props = this.props,\n          ficha = _this$props.ficha,\n          handleChangeSelect = _this$props.handleChangeSelect;\n    const _this$props2 = this.props,\n          paises = _this$props2.paises,\n          ciudades = _this$props2.ciudades,\n          provincias = _this$props2.provincias,\n          distritos = _this$props2.distritos,\n          instituciones = _this$props2.instituciones;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Layout, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Pais\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, getFieldDecorator(\"pais\", {\n      initialValue: ficha.id_educ_pais_per === \"\" || ficha.id_educ_pais_per === \"0\" || ficha.id_educ_pais_per == null ? 9589 : ficha.id_educ_pais_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione el pais.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione el pais\",\n      onChange: handleChangeSelect(\"id_educ_pais_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, paises.map(pais => React.createElement(Option, {\n      value: pais.CodNac,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, pais.Descripcion))))), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, getFieldDecorator(\"ciudad\", {\n      initialValue: ficha.id_educ_ciudad_per === \"\" || ficha.id_educ_ciudad_per == null ? 2919 : ficha.id_educ_ciudad_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la ciudad.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione la ciudad\",\n      onChange: handleChangeSelect(\"id_educ_ciudad_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, getFieldDecorator(\"provincia\", {\n      initialValue: ficha.id_educ_provincia_per === \"\" || ficha.id_educ_provincia_per == null ? 2301 : ficha.id_educ_provincia_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la provincia.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione la provincia\",\n      onChange: handleChangeSelect(\"id_educ_provincia_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, provincia.descripcion))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, getFieldDecorator(\"distrito\", {\n      initialValue: ficha.id_educ_distrito_per === \"\" || ficha.id_educ_distrito_per == null ? 230101 : ficha.id_educ_distrito_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione el distrito.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione el distrito\",\n      onChange: handleChangeSelect(\"id_educ_distrito_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, distritos.map(distritos => React.createElement(Option, {\n      value: distritos.CodDist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, distritos.descripcion))))), React.createElement(Form.Item, {\n      label: \"Institucion Educativa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, getFieldDecorator(\"institucion\", {\n      initialValue: ficha.idIEdu === \"\" || ficha.idIEdu == null ? \"NINGUNO\" : ficha.idIEdu,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la Institución Educativa.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione la Institución Educativa\",\n      onChange: handleChangeSelect(\"idIEdu\"),\n      showSearch: true,\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, instituciones.map(institucion => React.createElement(Option, {\n      value: institucion.IdiEdu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, institucion.NombreIE)))))));\n  }\n\n}\n\nexport default Form.create()(NivelEducativo);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\components\\NivelEducativo.jsx"],"names":["React","Form","Select","Layout","Option","initttt","mode","headers","apiUrl","NivelEducativo","Component","constructor","props","siguiente","e","preventDefault","regresar","getPaises","fetch","state","session","cod_univ","then","response","json","data","setState","nacionalidades","getCiudades","ciudades","getProvincias","provincias","getDistritos","distritos","getInstituciones","instituciones","componentDidMount","render","ficha","handleChangeSelect","paises","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","background","initialValue","id_educ_pais_per","rules","required","message","map","pais","CodNac","Descripcion","id_educ_ciudad_per","ciudad","CodCiudad","descripcion","id_educ_provincia_per","provincia","CodProv","id_educ_distrito_per","CodDist","idIEdu","input","option","children","toLowerCase","indexOf","institucion","IdiEdu","NombreIE","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Select, Layout } from \"antd\";\n\nconst { Option } = Select;\n\nconst initttt = {\n  mode: \"no-cors\", headers: {\n    'Content-Type': 'application/json',\n    \"Accept\": 'application/json',\n  }\n};\n\nconst apiUrl = 'http://localhost/FichaDatos/FichaWeb/modules';\n// const apiUrl = 'https://net.upt.edu.pe/FichaDatos/FichaWeb/modules';\nclass NivelEducativo extends React.Component {\n  siguiente = e => {\n    e.preventDefault();\n    this.props.siguiente();\n  };\n\n  regresar = e => {\n    e.preventDefault();\n    this.props.regresar();\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      instituciones: [],\n      session: this.props.session,\n      cod_univ: this.props.cod_univ\n    };\n  }\n\n  componentDidMount() {\n    // this.getPaises();\n    // this.getCiudades();\n    // this.getProvincias();\n    // this.getDistritos();\n    // this.getInstituciones();\n  }\n\n  getPaises = async () => {\n    await fetch(`${apiUrl}/Nacionalidad.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}`)\n      .then(response => response.json())\n      .then(data => this.setState({ nacionalidades: data }));\n  }\n\n  getCiudades = async () =>  {\n    await fetch(\n      `${apiUrl}/Ciudad.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ ciudades: data }));\n  }\n\n  getProvincias = async () =>  {\n    await fetch(\n      `${apiUrl}/Provincia.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idCiudad=2919`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ provincias: data }));\n  }\n\n  getDistritos = async () =>  {\n    await fetch(\n      `${apiUrl}/Distrito.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589&idCiudad=2919&idProvincia=2301`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ distritos: data }));\n  }\n\n  getInstituciones = async () =>  {\n    await fetch(\n      `${apiUrl}/NivelEducativo.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&nivel=1&idPais=9589&idCiudad=2919&idProvincia=2301&idDistrito=230101`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ instituciones: data }));\n  }\n\n  render() {\n    // const { nacionalidades } = this.state;\n    // const { ciudades } = this.state;\n    // const { provincias } = this.state;\n    // const { distritos } = this.state;\n    const { ficha, handleChangeSelect } = this.props;\n    const { paises, ciudades, provincias, distritos, instituciones } = this.props;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Layout style={{ background: \"white\" }}>\n        <Form {...formItemLayout}>\n          <Form.Item label=\"Pais\">\n            {getFieldDecorator(\"pais\", {\n              initialValue:\n                ficha.id_educ_pais_per === \"\" ||\n                ficha.id_educ_pais_per === \"0\" ||\n                ficha.id_educ_pais_per == null\n                  ? 9589\n                  : ficha.id_educ_pais_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione el pais.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione el pais\"}\n                onChange={handleChangeSelect(\"id_educ_pais_per\")}\n              >\n                {paises.map(pais => (\n                  <Option value={pais.CodNac}>\n                    {pais.Descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Ciudad\">\n            {getFieldDecorator(\"ciudad\", {\n              initialValue:\n                ficha.id_educ_ciudad_per === \"\" ||\n                ficha.id_educ_ciudad_per == null\n                  ? 2919\n                  : ficha.id_educ_ciudad_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la ciudad.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione la ciudad\"}\n                onChange={handleChangeSelect(\"id_educ_ciudad_per\")}\n              >\n                {ciudades.map(ciudad => (\n                  <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Provincia\">\n            {getFieldDecorator(\"provincia\", {\n              initialValue:\n                ficha.id_educ_provincia_per === \"\" ||\n                ficha.id_educ_provincia_per == null\n                  ? 2301\n                  : ficha.id_educ_provincia_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la provincia.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione la provincia\"}\n                onChange={handleChangeSelect(\"id_educ_provincia_per\")}\n              >\n                {provincias.map(provincia => (\n                  <Option value={provincia.CodProv}>\n                    {provincia.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Distrito\">\n            {getFieldDecorator(\"distrito\", {\n              initialValue:\n                ficha.id_educ_distrito_per === \"\" ||\n                ficha.id_educ_distrito_per == null\n                  ? 230101\n                  : ficha.id_educ_distrito_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione el distrito.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione el distrito\"}\n                onChange={handleChangeSelect(\"id_educ_distrito_per\")}\n              >\n                {distritos.map(distritos => (\n                  <Option value={distritos.CodDist}>\n                    {distritos.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Institucion Educativa\">\n            {getFieldDecorator(\"institucion\", {\n              initialValue:\n                ficha.idIEdu === \"\" || ficha.idIEdu == null\n                  ? \"NINGUNO\"\n                  : ficha.idIEdu,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la Institución Educativa.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione la Institución Educativa\"}\n                onChange={handleChangeSelect(\"idIEdu\")}\n                showSearch={true}\n                optionFilterProp={\"children\"}\n                filterOption={(input, option) =>\n                  option.props.children\n                    .toLowerCase()\n                    .indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {instituciones.map(institucion => (\n                  <Option value={institucion.IdiEdu}>\n                    {institucion.NombreIE}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default Form.create()(NivelEducativo);\n"]},"metadata":{},"sourceType":"module"}