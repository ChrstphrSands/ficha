{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\ficha\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\components\\\\NivelEducativo.jsx\";\nimport React from \"react\";\nimport { Form, Select, Layout } from \"antd\";\nconst Option = Select.Option;\nconst initttt = {\n  mode: \"no-cors\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n};\nconst apiUrl = \"http://192.168.0.5/FichaDatos/FichaWeb/modules\"; // const apiUrl = 'https://net.upt.edu.pe/FichaDatos/FichaWeb/modules';\n\nclass NivelEducativo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.siguiente = e => {\n      e.preventDefault();\n      this.props.siguiente();\n    };\n\n    this.regresar = e => {\n      e.preventDefault();\n      this.props.regresar();\n    };\n\n    this.getPaises = async () => {// await fetch(`${apiUrl}/Nacionalidad.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}`)\n      //   .then(response => response.json())\n      //   .then(data => this.setState({ nacionalidades: data }));\n    };\n\n    this.getCiudades = async () => {\n      // await fetch(\n      //   `${apiUrl}/Ciudad.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589`\n      // )\n      //   .then(response => response.json())\n      //   .then(data => this.setState({ ciudades: data }));\n      const ciudades = [];\n\n      for (let index = 0; index < this.state.ciudadesEduc.length; index++) {\n        if (this.state.ciudadesEduc[index].relacion == this.state.ficha.id_educ_pais_per) {\n          ciudades.push(this.state.ciudadesEduc[index]);\n        }\n      }\n\n      if (ciudades.length > 0) {\n        await this.setState({\n          ciudades: ciudades\n        });\n      } // else {\n      //   await this.setState({\n      //     ciudades: [],\n      //     ficha: {\n      //       ...this.state.ficha,\n      //       id_nac_ciudad_per: \"-------\",\n      //       id_nac_provincia_per: \"-------\"\n      //     }\n      //   });\n      // }\n\n    };\n\n    this.getProvincias = async () => {\n      // await fetch(\n      //   `${apiUrl}/Provincia.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idCiudad=2919`\n      // )\n      //   .then(response => response.json())\n      //   .then(data => this.setState({ provincias: data }));\n      const provincias = [];\n\n      for (let index = 0; index < this.state.provinciasEduc.length; index++) {\n        if (this.state.provinciasEduc[index].relacion == this.state.ficha.id_educ_ciudad_per) {\n          provincias.push(this.state.provinciasEduc[index]);\n        }\n      }\n\n      if (provincias.length > 0) {\n        await this.setState({\n          provincias: provincias\n        });\n      }\n    };\n\n    this.getDistritos = async () => {\n      // await fetch(\n      //   `${apiUrl}/Distrito.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589&idCiudad=2919&idProvincia=2301`\n      // )\n      //   .then(response => response.json())\n      //   .then(data => this.setState({ distritos: data }));\n      const distritos = [];\n\n      for (let index = 0; index < this.state.distritosEduc.length; index++) {\n        if (this.state.distritosEduc[index].CodDistProv == this.state.ficha.id_educ_provincia_per) {\n          distritos.push(this.state.distritosEduc[index]);\n        }\n      }\n\n      if (distritos.length > 0) {\n        await this.setState({\n          distritos: distritos\n        });\n      }\n    };\n\n    this.getInstituciones = async () => {\n      await fetch(\"\".concat(apiUrl, \"/NivelEducativo.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ, \"&nivel=1&idPais=9589&idCiudad=2919&idProvincia=2301&idDistrito=230101\")).then(response => response.json()).then(data => this.setState({\n        instituciones: data\n      }));\n    };\n\n    this.handleSelectedPais = async e => {\n      await this.setState({\n        ficha: _objectSpread({}, this.state.ficha, {\n          id_educ_pais_per: e\n        })\n      });\n      await this.getCiudades();\n    };\n\n    this.handleSelectedCiudad = async e => {\n      await this.setState({\n        ficha: _objectSpread({}, this.state.ficha, {\n          id_educ_ciudad_per: e\n        })\n      });\n      await this.getProvincias();\n    };\n\n    this.handleSelectedProvincia = async e => {\n      await this.setState({\n        ficha: _objectSpread({}, this.state.ficha, {\n          id_educ_provincia_per: e\n        })\n      });\n      await this.getDistritos();\n    };\n\n    this.state = {\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      instituciones: [],\n      paisesEduc: [],\n      ciudadesEduc: [],\n      provinciasEduc: [],\n      distritosEduc: [],\n      session: this.props.session,\n      cod_univ: this.props.cod_univ\n    };\n  }\n\n  async componentDidMount() {\n    const _this$props = this.props,\n          ficha = _this$props.ficha,\n          paises = _this$props.paises,\n          ciudades = _this$props.ciudades,\n          provincias = _this$props.provincias,\n          distritos = _this$props.distritos,\n          instituciones = _this$props.instituciones;\n    await this.setState({\n      paises: paises,\n      paisesEduc: paises,\n      ciudadesEduc: ciudades,\n      provinciasEduc: provincias,\n      distritosEduc: distritos,\n      instituciones: instituciones,\n      ficha: ficha\n    });\n    await this.getCiudades();\n    await this.getProvincias();\n    await this.getDistritos();\n  }\n\n  render() {\n    // const { nacionalidades } = this.state;\n    // const { ciudades } = this.state;\n    // const { provincias } = this.state;\n    // const { distritos } = this.state;\n    const handleChangeSelect = this.props.handleChangeSelect;\n    const _this$state = this.state,\n          ficha = _this$state.ficha,\n          paises = _this$state.paises,\n          ciudades = _this$state.ciudades,\n          provincias = _this$state.provincias,\n          distritos = _this$state.distritos,\n          instituciones = _this$state.instituciones;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Layout, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Pais\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, getFieldDecorator(\"pais\", {\n      initialValue: ficha.id_educ_pais_per == \"\" || ficha.id_educ_pais_per == \"0\" || ficha.id_educ_pais_per == null ? 9589 : ficha.id_educ_pais_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione el pais.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione el pais\",\n      onChange: handleChangeSelect(\"id_educ_pais_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, paises.map(pais => React.createElement(Option, {\n      value: pais.CodNac,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, pais.Descripcion))))), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, getFieldDecorator(\"ciudad\", {\n      initialValue: ficha.id_educ_ciudad_per === \"\" || ficha.id_educ_ciudad_per == null ? 2919 : ficha.id_educ_ciudad_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la ciudad.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione la ciudad\",\n      onChange: handleChangeSelect(\"id_educ_ciudad_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, getFieldDecorator(\"provincia\", {\n      initialValue: ficha.id_educ_provincia_per === \"\" || ficha.id_educ_provincia_per == null ? 2301 : ficha.id_educ_provincia_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la provincia.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione la provincia\",\n      onChange: handleChangeSelect(\"id_educ_provincia_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, provincia.descripcion))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, getFieldDecorator(\"distrito\", {\n      initialValue: ficha.id_educ_distrito_per === \"\" || ficha.id_educ_distrito_per == null ? 230101 : ficha.id_educ_distrito_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione el distrito.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione el distrito\",\n      onChange: handleChangeSelect(\"id_educ_distrito_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, distritos.map(distritos => React.createElement(Option, {\n      value: distritos.CodDist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, distritos.descripcion))))), React.createElement(Form.Item, {\n      label: \"Institucion Educativa\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, getFieldDecorator(\"institucion\", {\n      initialValue: ficha.idIEdu === \"\" || ficha.idIEdu == null ? \"NINGUNO\" : ficha.idIEdu,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la Institución Educativa.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione la Institución Educativa\",\n      onChange: handleChangeSelect(\"idIEdu\"),\n      showSearch: true,\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, instituciones.map(institucion => React.createElement(Option, {\n      value: institucion.IdiEdu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, institucion.NombreIE)))))));\n  }\n\n}\n\nexport default Form.create()(NivelEducativo);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\components\\NivelEducativo.jsx"],"names":["React","Form","Select","Layout","Option","initttt","mode","headers","Accept","apiUrl","NivelEducativo","Component","constructor","props","siguiente","e","preventDefault","regresar","getPaises","getCiudades","ciudades","index","state","ciudadesEduc","length","relacion","ficha","id_educ_pais_per","push","setState","getProvincias","provincias","provinciasEduc","id_educ_ciudad_per","getDistritos","distritos","distritosEduc","CodDistProv","id_educ_provincia_per","getInstituciones","fetch","session","cod_univ","then","response","json","data","instituciones","handleSelectedPais","handleSelectedCiudad","handleSelectedProvincia","paisesEduc","componentDidMount","paises","render","handleChangeSelect","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","background","initialValue","rules","required","message","map","pais","CodNac","Descripcion","ciudad","CodCiudad","descripcion","provincia","CodProv","id_educ_distrito_per","CodDist","idIEdu","input","option","children","toLowerCase","indexOf","institucion","IdiEdu","NombreIE","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Select, Layout } from \"antd\";\n\nconst { Option } = Select;\n\nconst initttt = {\n  mode: \"no-cors\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n};\n\nconst apiUrl = \"http://192.168.0.5/FichaDatos/FichaWeb/modules\";\n// const apiUrl = 'https://net.upt.edu.pe/FichaDatos/FichaWeb/modules';\nclass NivelEducativo extends React.Component {\n  siguiente = e => {\n    e.preventDefault();\n    this.props.siguiente();\n  };\n\n  regresar = e => {\n    e.preventDefault();\n    this.props.regresar();\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      instituciones: [],\n      paisesEduc: [],\n      ciudadesEduc: [],\n      provinciasEduc: [],\n      distritosEduc: [],\n      session: this.props.session,\n      cod_univ: this.props.cod_univ\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      ficha,\n      paises,\n      ciudades,\n      provincias,\n      distritos,\n      instituciones\n    } = this.props;\n    await this.setState({\n      paises: paises,\n      paisesEduc: paises,\n      ciudadesEduc: ciudades,\n      provinciasEduc: provincias,\n      distritosEduc: distritos,\n      instituciones: instituciones,\n      ficha: ficha\n    });\n\n    await this.getCiudades();\n    await this.getProvincias();\n    await this.getDistritos();\n  }\n\n  getPaises = async () => {\n    // await fetch(`${apiUrl}/Nacionalidad.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}`)\n    //   .then(response => response.json())\n    //   .then(data => this.setState({ nacionalidades: data }));\n  };\n\n  getCiudades = async () => {\n    // await fetch(\n    //   `${apiUrl}/Ciudad.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589`\n    // )\n    //   .then(response => response.json())\n    //   .then(data => this.setState({ ciudades: data }));\n    const ciudades = [];\n\n    for (let index = 0; index < this.state.ciudadesEduc.length; index++) {\n      if (\n        this.state.ciudadesEduc[index].relacion ==\n        this.state.ficha.id_educ_pais_per\n      ) {\n        ciudades.push(this.state.ciudadesEduc[index]);\n      }\n    }\n\n    if (ciudades.length > 0) {\n      await this.setState({\n        ciudades: ciudades\n      });\n    }\n    // else {\n    //   await this.setState({\n    //     ciudades: [],\n    //     ficha: {\n    //       ...this.state.ficha,\n    //       id_nac_ciudad_per: \"-------\",\n    //       id_nac_provincia_per: \"-------\"\n    //     }\n    //   });\n    // }\n  };\n\n  getProvincias = async () => {\n    // await fetch(\n    //   `${apiUrl}/Provincia.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idCiudad=2919`\n    // )\n    //   .then(response => response.json())\n    //   .then(data => this.setState({ provincias: data }));\n\n    const provincias = [];\n    for (let index = 0; index < this.state.provinciasEduc.length; index++) {\n      if (\n        this.state.provinciasEduc[index].relacion ==\n        this.state.ficha.id_educ_ciudad_per\n      ) {\n        provincias.push(this.state.provinciasEduc[index]);\n      }\n    }\n    if (provincias.length > 0) {\n      await this.setState({\n        provincias: provincias\n      });\n    }\n  };\n\n  getDistritos = async () => {\n    // await fetch(\n    //   `${apiUrl}/Distrito.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589&idCiudad=2919&idProvincia=2301`\n    // )\n    //   .then(response => response.json())\n    //   .then(data => this.setState({ distritos: data }));\n\n    const distritos = [];\n    for (let index = 0; index < this.state.distritosEduc.length; index++) {\n      if (\n        this.state.distritosEduc[index].CodDistProv ==\n        this.state.ficha.id_educ_provincia_per\n      ) {\n        distritos.push(this.state.distritosEduc[index]);\n      }\n    }\n    if (distritos.length > 0) {\n      await this.setState({\n        distritos: distritos\n      });\n    }\n  };\n\n  getInstituciones = async () => {\n    await fetch(\n      `${apiUrl}/NivelEducativo.php?p=read&session=${\n        this.state.session\n      }&CodUniv=${\n        this.state.cod_univ\n      }&nivel=1&idPais=9589&idCiudad=2919&idProvincia=2301&idDistrito=230101`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ instituciones: data }));\n  };\n\n  handleSelectedPais = async e => {\n    await this.setState({\n      ficha: {\n        ...this.state.ficha,\n        id_educ_pais_per: e\n      }\n    });\n    await this.getCiudades();\n  };\n\n  handleSelectedCiudad = async e => {\n    await this.setState({\n      ficha: {\n        ...this.state.ficha,\n        id_educ_ciudad_per: e\n      }\n    });\n    await this.getProvincias();\n  };\n\n  handleSelectedProvincia = async e => {\n    await this.setState({\n      ficha: {\n        ...this.state.ficha,\n        id_educ_provincia_per: e\n      }\n    });\n    await this.getDistritos();\n  };\n\n  render() {\n    // const { nacionalidades } = this.state;\n    // const { ciudades } = this.state;\n    // const { provincias } = this.state;\n    // const { distritos } = this.state;\n    const { handleChangeSelect } = this.props;\n    const {\n      ficha,\n      paises,\n      ciudades,\n      provincias,\n      distritos,\n      instituciones\n    } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Layout style={{ background: \"white\" }}>\n        <Form {...formItemLayout}>\n          <Form.Item label=\"Pais\">\n            {getFieldDecorator(\"pais\", {\n              initialValue:\n                ficha.id_educ_pais_per == \"\" ||\n                ficha.id_educ_pais_per == \"0\" ||\n                ficha.id_educ_pais_per == null\n                  ? 9589\n                  : ficha.id_educ_pais_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione el pais.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione el pais\"}\n                onChange={handleChangeSelect(\"id_educ_pais_per\")}\n              >\n                {paises.map(pais => (\n                  <Option value={pais.CodNac}>{pais.Descripcion}</Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Ciudad\">\n            {getFieldDecorator(\"ciudad\", {\n              initialValue:\n                ficha.id_educ_ciudad_per === \"\" ||\n                ficha.id_educ_ciudad_per == null\n                  ? 2919\n                  : ficha.id_educ_ciudad_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la ciudad.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione la ciudad\"}\n                onChange={handleChangeSelect(\"id_educ_ciudad_per\")}\n              >\n                {ciudades.map(ciudad => (\n                  <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Provincia\">\n            {getFieldDecorator(\"provincia\", {\n              initialValue:\n                ficha.id_educ_provincia_per === \"\" ||\n                ficha.id_educ_provincia_per == null\n                  ? 2301\n                  : ficha.id_educ_provincia_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la provincia.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione la provincia\"}\n                onChange={handleChangeSelect(\"id_educ_provincia_per\")}\n              >\n                {provincias.map(provincia => (\n                  <Option value={provincia.CodProv}>\n                    {provincia.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Distrito\">\n            {getFieldDecorator(\"distrito\", {\n              initialValue:\n                ficha.id_educ_distrito_per === \"\" ||\n                ficha.id_educ_distrito_per == null\n                  ? 230101\n                  : ficha.id_educ_distrito_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione el distrito.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione el distrito\"}\n                onChange={handleChangeSelect(\"id_educ_distrito_per\")}\n              >\n                {distritos.map(distritos => (\n                  <Option value={distritos.CodDist}>\n                    {distritos.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Institucion Educativa\">\n            {getFieldDecorator(\"institucion\", {\n              initialValue:\n                ficha.idIEdu === \"\" || ficha.idIEdu == null\n                  ? \"NINGUNO\"\n                  : ficha.idIEdu,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la Institución Educativa.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione la Institución Educativa\"}\n                onChange={handleChangeSelect(\"idIEdu\")}\n                showSearch={true}\n                optionFilterProp={\"children\"}\n                filterOption={(input, option) =>\n                  option.props.children\n                    .toLowerCase()\n                    .indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {instituciones.map(institucion => (\n                  <Option value={institucion.IdiEdu}>\n                    {institucion.NombreIE}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default Form.create()(NivelEducativo);\n"]},"metadata":{},"sourceType":"module"}