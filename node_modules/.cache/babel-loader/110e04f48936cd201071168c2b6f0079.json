{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\components\\\\LugarResidenciaActual.jsx\";\nimport React from 'react';\nimport { Form, Input, Select, Layout } from 'antd';\nconst TextArea = Input.TextArea;\nconst Option = Select.Option;\n\nclass LugarResidenciaActual extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.siguiente = e => {\n      e.preventDefault();\n      this.props.siguiente();\n    };\n\n    this.regresar = e => {\n      e.preventDefault();\n      this.props.regresar();\n    };\n\n    this.state = {\n      ciudades: [],\n      provincias: [],\n      distritos: []\n    };\n  }\n\n  componentDidMount() {\n    this.getCiudades();\n    this.getProvincias();\n    this.getDistritos();\n  }\n\n  getCiudades() {\n    fetch('http://localhost/FichaWeb/app/controller/ciudad/read.php/?idPais=9589').then(response => response.json()).then(data => this.setState({\n      ciudades: data\n    }));\n  }\n\n  getProvincias() {\n    fetch('http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919').then(response => response.json()).then(data => this.setState({\n      provincias: data\n    }));\n  }\n\n  getDistritos() {\n    fetch('http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301').then(response => response.json()).then(data => this.setState({\n      distritos: data\n    }));\n  }\n\n  render() {\n    const ciudades = this.state.ciudades;\n    const provincias = this.state.provincias;\n    const distritos = this.state.distritos;\n    const _this$props = this.props,\n          ficha = _this$props.ficha,\n          handleChangeInput = _this$props.handleChangeInput,\n          handleChangeSelect = _this$props.handleChangeSelect;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Layout, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, getFieldDecorator('ciudad', {\n      initialValue: ficha.id_res_ciudad_per == '' ? '2919' : ficha.id_res_ciudad_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la ciudad.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione en caso tenga alguna discapacidad\",\n      onChange: handleChangeSelect('id_res_ciudad_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, getFieldDecorator('provincia', {\n      initialValue: ficha.id_res_provincia_per == '' ? '2301' : ficha.id_res_provincia_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la provincia.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Provincia\",\n      onChange: handleChangeSelect('id_res_provincia_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, provincia.descripcion))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, getFieldDecorator('distrito', {\n      initialValue: ficha.id_res_distrito_per == '' ? '230101' : ficha.id_res_distrito_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione el distrito.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Distrito\",\n      onChange: handleChangeSelect('id_res_distrito_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, distritos.map(distrito => React.createElement(Option, {\n      value: distrito.CodDist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, distrito.descripcion))))), React.createElement(Form.Item, {\n      label: \"Direcci\\xF3n de Domicilio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, getFieldDecorator('direccionDomicilio', {\n      initialValue: ficha.res_direccion_per,\n      rules: [{\n        required: true,\n        message: 'Por registre su dirección.'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      onChange: handleChangeInput('res_direccion_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Referencia de Domicilio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, getFieldDecorator('referenciaDomicilio', {\n      initialValue: ficha.res_referencia_per,\n      rules: [{\n        required: true,\n        message: 'Por favor registre la referencia de su domicilio.'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      onChange: handleChangeInput('res_referencia_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Tel\\xE9fono de Referencia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, getFieldDecorator('telefonoReferencia', {\n      initialValue: ficha.res_telefono_per,\n      rules: [{\n        required: true,\n        message: 'Por favor ingrese un teléfono de referencia.'\n      }]\n    })(React.createElement(Input, {\n      onChange: handleChangeInput('res_telefono_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Form.create()(LugarResidenciaActual);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\components\\LugarResidenciaActual.jsx"],"names":["React","Form","Input","Select","Layout","TextArea","Option","LugarResidenciaActual","Component","constructor","props","siguiente","e","preventDefault","regresar","state","ciudades","provincias","distritos","componentDidMount","getCiudades","getProvincias","getDistritos","fetch","then","response","json","data","setState","render","ficha","handleChangeInput","handleChangeSelect","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","background","initialValue","id_res_ciudad_per","rules","required","message","map","ciudad","CodCiudad","descripcion","id_res_provincia_per","provincia","CodProv","id_res_distrito_per","distrito","CodDist","res_direccion_per","res_referencia_per","res_telefono_per","create"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Form, Input, Select, Layout} from 'antd';\r\n\r\nconst {TextArea} = Input;\r\nconst {Option} = Select;\r\n\r\nclass LugarResidenciaActual extends React.Component {\r\n\r\n    siguiente = e => {\r\n        e.preventDefault();\r\n        this.props.siguiente();\r\n    };\r\n\r\n    regresar = e => {\r\n        e.preventDefault();\r\n        this.props.regresar();\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            ciudades: [],\r\n            provincias: [],\r\n            distritos: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCiudades();\r\n        this.getProvincias();\r\n        this.getDistritos();\r\n    }\r\n\r\n    getCiudades() {\r\n        fetch('http://localhost/FichaWeb/app/controller/ciudad/read.php/?idPais=9589')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ciudades: data}));\r\n    }\r\n\r\n    getProvincias() {\r\n        fetch('http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({provincias: data}));\r\n    }\r\n\r\n    getDistritos() {\r\n        fetch('http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({distritos: data}));\r\n    }\r\n\r\n    render() {\r\n\r\n        const {ciudades} = this.state;\r\n        const {provincias} = this.state;\r\n        const {distritos} = this.state;\r\n        const {ficha, handleChangeInput, handleChangeSelect} = this.props;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: {span: 24},\r\n                sm: {span: 8},\r\n            },\r\n            wrapperCol: {\r\n                xs: {span: 24},\r\n                sm: {span: 16},\r\n            },\r\n        };\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n\r\n        return (\r\n            <Layout style={{background: \"white\"}}>\r\n\r\n                <Form {...formItemLayout}>\r\n                    <Form.Item label=\"Ciudad\">\r\n                        {getFieldDecorator('ciudad', {\r\n                            initialValue: ficha.id_res_ciudad_per == '' ? '2919' : ficha.id_res_ciudad_per,\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Por favor seleccione la ciudad.',\r\n                                },\r\n                            ],\r\n                        })(\r\n                            <Select placeholder={\"Seleccione en caso tenga alguna discapacidad\"}\r\n                                    onChange={handleChangeSelect('id_res_ciudad_per')}>\r\n                                {ciudades.map(ciudad =>\r\n                                    <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>\r\n                                )}\r\n                            </Select>)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Provincia\">\r\n                        {getFieldDecorator('provincia', {\r\n                            initialValue: ficha.id_res_provincia_per == '' ? '2301' : ficha.id_res_provincia_per,\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Por favor seleccione la provincia.',\r\n                                },\r\n                            ],\r\n                        })(\r\n                            <Select placeholder={\"Provincia\"} onChange={handleChangeSelect('id_res_provincia_per')}>\r\n                                {provincias.map(provincia =>\r\n                                    <Option value={provincia.CodProv}>{provincia.descripcion}</Option>\r\n                                )}\r\n                            </Select>)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Distrito\">\r\n                        {getFieldDecorator('distrito', {\r\n                            initialValue: ficha.id_res_distrito_per == '' ? '230101' : ficha.id_res_distrito_per,\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Por favor seleccione el distrito.',\r\n                                },\r\n                            ],\r\n                        })(<Select placeholder={\"Distrito\"} onChange={handleChangeSelect('id_res_distrito_per')}>\r\n                            {distritos.map(distrito =>\r\n                                <Option value={distrito.CodDist}>{distrito.descripcion}</Option>\r\n                            )}\r\n                        </Select>)}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Dirección de Domicilio\">\r\n                        {getFieldDecorator('direccionDomicilio', {\r\n                            initialValue: ficha.res_direccion_per,\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Por registre su dirección.',\r\n                                },\r\n                            ],\r\n                        })(\r\n                            <TextArea rows={4} onChange={handleChangeInput('res_direccion_per')}/>\r\n                        )}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Referencia de Domicilio\">\r\n                        {getFieldDecorator('referenciaDomicilio', {\r\n                            initialValue: ficha.res_referencia_per,\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Por favor registre la referencia de su domicilio.',\r\n                                },\r\n                            ],\r\n                        })(\r\n                            <TextArea rows={4} onChange={handleChangeInput('res_referencia_per')}/>\r\n                        )}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Teléfono de Referencia\">\r\n                        {getFieldDecorator('telefonoReferencia', {\r\n                            initialValue: ficha.res_telefono_per,\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Por favor ingrese un teléfono de referencia.',\r\n                                },\r\n                            ],\r\n                        })(\r\n                            <Input onChange={handleChangeInput('res_telefono_per')}/>\r\n                        )}\r\n                    </Form.Item>\r\n                </Form>\r\n            </Layout>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Form.create()(LugarResidenciaActual);"]},"metadata":{},"sourceType":"module"}