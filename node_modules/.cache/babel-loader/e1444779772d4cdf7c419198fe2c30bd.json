{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\components\\\\LugarFechaNacimiento.jsx\";\nimport React from 'react';\nimport { Form, Input, Button, Select, DatePicker, Layout, Icon } from 'antd';\nimport moment from \"moment\";\nconst Option = Select.Option;\nconst Footer = Layout.Footer;\nlet idPais = '';\n\nclass LugarFechaNacimiento extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.siguiente = e => {\n      e.preventDefault();\n      this.props.siguiente();\n    };\n\n    this.regresar = e => {\n      e.preventDefault();\n      this.props.regresar();\n    };\n\n    this.state = {\n      nacionalidades: [],\n      ciudades: [],\n      provincias: [],\n      distritos: []\n    };\n  }\n\n  componentDidMount() {\n    this.getPaises();\n    this.getCiudades();\n    this.getProvincias();\n    this.getDistritos();\n  }\n\n  getPaises() {\n    fetch('http://localhost/FichaWeb/app/controller/nacionalidad/read.php').then(response => response.json()).then(data => this.setState({\n      nacionalidades: data\n    }));\n  }\n\n  getCiudades() {\n    fetch(\"http://localhost/FichaWeb/app/controller/ciudad/read.php?idPais=9589\").then(response => response.json()).then(data => this.setState({\n      ciudades: data\n    }));\n    console.log(idPais);\n  }\n\n  getProvincias() {\n    fetch('http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919').then(response => response.json()).then(data => this.setState({\n      provincias: data\n    }));\n  }\n\n  getDistritos() {\n    fetch('http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301').then(response => response.json()).then(data => this.setState({\n      distritos: data\n    }));\n  }\n\n  render() {\n    const _this$props = this.props,\n          ficha = _this$props.ficha,\n          handleChangeInput = _this$props.handleChangeInput,\n          handleChangeSelect = _this$props.handleChangeSelect,\n          handleChangeDatePicker = _this$props.handleChangeDatePicker;\n    const _this$state = this.state,\n          nacionalidades = _this$state.nacionalidades,\n          ciudades = _this$state.ciudades,\n          provincias = _this$state.provincias,\n          distritos = _this$state.distritos;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const dateFormat = 'DD/MM/YYYY';\n    const config = {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: 'Por favor seleccione la fecha de su nacimiento'\n      }]\n    };\n\n    function handleChanges(value) {\n      console.log(\"se ha seleccionado \".concat(value));\n    }\n\n    return React.createElement(Layout, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      style: {\n        width: \"75%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Fecha de Nacimiento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, getFieldDecorator('fechaNac', {\n      initialValue: moment(ficha.fch_nacimiento_per, dateFormat)\n    }, config)(React.createElement(DatePicker, {\n      defaultPickerValue: moment(ficha.fch_nacimiento_per),\n      placeholder: \"25/11/1999\",\n      format: 'DD-MM-YYYY',\n      onChange: handleChangeDatePicker('fch_nacimiento_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Pa\\xEDs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, getFieldDecorator('pais', {\n      initialValue: ficha.id_nac_pais_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione el país.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Perú\",\n      onChange: handleChangeSelect('id_nac_pais_per'),\n      showSearch: true,\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, nacionalidades.map(nacionalidad => React.createElement(Option, {\n      value: nacionalidad.CodNac,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, nacionalidad.Descripcion))))), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, getFieldDecorator('ciudad', {\n      initialValue: ficha.id_nac_ciudad_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la ciudad.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione ciudad\",\n      onChange: handleChangeSelect('id_nac_ciudad_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, getFieldDecorator('provincia', {\n      initialValue: ficha.id_nac_provincia_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la provincia.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione la provincia\",\n      onChange: handleChangeSelect('id_nac_provincia_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, provincia.descripcion))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, getFieldDecorator('distrito', {\n      initialValue: ficha.id_nac_distrito_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione el distrito.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione el distrito\",\n      onChange: handleChangeSelect('id_nac_distrito_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, distritos.map(distrito => React.createElement(Option, {\n      value: distrito.CodDist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, distrito.descripcion)))))));\n  }\n\n}\n\nexport default Form.create()(LugarFechaNacimiento);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\components\\LugarFechaNacimiento.jsx"],"names":["React","Form","Input","Button","Select","DatePicker","Layout","Icon","moment","Option","Footer","idPais","LugarFechaNacimiento","Component","constructor","props","siguiente","e","preventDefault","regresar","state","nacionalidades","ciudades","provincias","distritos","componentDidMount","getPaises","getCiudades","getProvincias","getDistritos","fetch","then","response","json","data","setState","console","log","render","ficha","handleChangeInput","handleChangeSelect","handleChangeDatePicker","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","dateFormat","config","rules","type","required","message","handleChanges","value","background","width","initialValue","fch_nacimiento_per","id_nac_pais_per","input","option","children","toLowerCase","indexOf","map","nacionalidad","CodNac","Descripcion","id_nac_ciudad_per","ciudad","CodCiudad","descripcion","id_nac_provincia_per","provincia","CodProv","id_nac_distrito_per","distrito","CodDist","create"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Form, Input, Button, Select, DatePicker, Layout, Icon} from 'antd';\r\nimport moment from \"moment\";\r\n\r\nconst {Option} = Select;\r\nconst {Footer} = Layout;\r\n\r\nlet idPais = '';\r\n\r\nclass LugarFechaNacimiento extends React.Component {\r\n\r\n  siguiente = e => {\r\n    e.preventDefault();\r\n    this.props.siguiente();\r\n  };\r\n\r\n  regresar = e => {\r\n    e.preventDefault();\r\n    this.props.regresar();\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      nacionalidades: [],\r\n      ciudades: [],\r\n      provincias: [],\r\n      distritos: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPaises();\r\n    this.getCiudades();\r\n    this.getProvincias();\r\n    this.getDistritos();\r\n  }\r\n\r\n  getPaises() {\r\n    fetch('http://localhost/FichaWeb/app/controller/nacionalidad/read.php')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({nacionalidades: data}));\r\n  }\r\n\r\n  getCiudades() {\r\n    fetch(`http://localhost/FichaWeb/app/controller/ciudad/read.php?idPais=9589`)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ciudades: data}));\r\n    console.log(idPais);\r\n  }\r\n\r\n  getProvincias() {\r\n    fetch('http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({provincias: data}));\r\n  }\r\n\r\n  getDistritos() {\r\n    fetch('http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({distritos: data}));\r\n  }\r\n\r\n  render() {\r\n    const {ficha, handleChangeInput, handleChangeSelect, handleChangeDatePicker} = this.props;\r\n    const {nacionalidades, ciudades, provincias, distritos} = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 8},\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 16},\r\n      },\r\n    };\r\n\r\n    const {getFieldDecorator} = this.props.form;\r\n    const dateFormat = 'DD/MM/YYYY';\r\n    const config = {\r\n      rules: [{type: 'object', required: true, message: 'Por favor seleccione la fecha de su nacimiento'}],\r\n    };\r\n\r\n    function handleChanges(value) {\r\n      console.log(`se ha seleccionado ${value}`);\r\n    }\r\n\r\n    return (\r\n      <Layout style={{background: \"white\"}}>\r\n        <Form {...formItemLayout} style={{width: \"75%\"}}>\r\n          <Form.Item label=\"Fecha de Nacimiento\">\r\n            {getFieldDecorator('fechaNac', {\r\n              initialValue: moment(ficha.fch_nacimiento_per, dateFormat),\r\n\r\n            }, config)\r\n            (\r\n              <DatePicker defaultPickerValue={moment(ficha.fch_nacimiento_per)} placeholder={\"25/11/1999\"}\r\n                          format={'DD-MM-YYYY'}\r\n                          onChange={handleChangeDatePicker('fch_nacimiento_per')}\r\n              />\r\n            )}\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"País\">\r\n            {getFieldDecorator('pais', {\r\n              initialValue: ficha.id_nac_pais_per,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor seleccione el país.',\r\n                },\r\n              ],\r\n            })(\r\n              <Select\r\n                placeholder={\"Perú\"}\r\n                onChange={handleChangeSelect('id_nac_pais_per')}\r\n                showSearch={true}\r\n                optionFilterProp={\"children\"}\r\n                filterOption={(input, option) =>\r\n                  option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                }\r\n              >\r\n                {\r\n                  nacionalidades.map(nacionalidad =>\r\n                    <Option value={nacionalidad.CodNac}>{nacionalidad.Descripcion}</Option>\r\n                  )\r\n                }\r\n              </Select>)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Ciudad\">\r\n            {getFieldDecorator('ciudad', {\r\n              initialValue: ficha.id_nac_ciudad_per,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor seleccione la ciudad.',\r\n                },\r\n              ],\r\n            })(\r\n              <Select placeholder={\"Seleccione ciudad\"} onChange={handleChangeSelect('id_nac_ciudad_per')}>\r\n                {\r\n                  ciudades.map(ciudad =>\r\n                    <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>)\r\n                }\r\n              </Select>)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Provincia\">\r\n            {getFieldDecorator('provincia', {\r\n              initialValue: ficha.id_nac_provincia_per,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor seleccione la provincia.',\r\n                },\r\n              ],\r\n            })(\r\n              <Select placeholder={\"Seleccione la provincia\"} onChange={handleChangeSelect('id_nac_provincia_per')}>\r\n                {provincias.map(provincia =>\r\n                  <Option value={provincia.CodProv}>{provincia.descripcion}</Option>\r\n                )}\r\n              </Select>)}\r\n          </Form.Item>\r\n          <Form.Item label=\"Distrito\">\r\n            {getFieldDecorator('distrito', {\r\n              initialValue: ficha.id_nac_distrito_per,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor seleccione el distrito.',\r\n                },\r\n              ],\r\n            })(\r\n              <Select placeholder={\"Seleccione el distrito\"} onChange={handleChangeSelect('id_nac_distrito_per')}>\r\n                {distritos.map(distrito =>\r\n                  <Option value={distrito.CodDist}>{distrito.descripcion}</Option>\r\n                )}\r\n              </Select>\r\n            )}\r\n          </Form.Item>\r\n        </Form>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Form.create()(LugarFechaNacimiento);"]},"metadata":{},"sourceType":"module"}