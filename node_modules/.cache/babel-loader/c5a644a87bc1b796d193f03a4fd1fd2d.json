{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\components\\\\LugarFechaNacimiento.jsx\";\nimport React from 'react';\nimport { Form, Input, Button, Select, DatePicker, Layout, Icon } from 'antd';\nimport moment from \"moment\";\nconst Option = Select.Option;\nconst Footer = Layout.Footer;\nlet idPais = '';\n\nclass LugarFechaNacimiento extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.siguiente = e => {\n      e.preventDefault();\n      this.props.siguiente();\n    };\n\n    this.regresar = e => {\n      e.preventDefault();\n      this.props.regresar();\n    };\n\n    this.state = {\n      nacionalidades: [],\n      ciudades: [],\n      provincias: [],\n      distritos: []\n    };\n  }\n\n  componentDidMount() {\n    this.getPaises();\n  }\n\n  getPaises() {\n    fetch('http://localhost/FichaWeb/app/controller/nacionalidad/read.php').then(response => response.json()).then(data => this.setState({\n      nacionalidades: data\n    }));\n  }\n\n  getCiudades() {\n    fetch(\"http://localhost/FichaWeb/app/controller/ciudad/read.php?idPais=\".concat(idPais)).then(response => response.json()).then(data => this.setState({\n      ciudades: data\n    }));\n    console.log(idPais);\n  }\n\n  getProvincias() {}\n\n  getDistritos() {}\n\n  render() {\n    const _this$props = this.props,\n          ficha = _this$props.ficha,\n          handleChangeInput = _this$props.handleChangeInput,\n          handleChangeSelect = _this$props.handleChangeSelect,\n          handleChangeDatePicker = _this$props.handleChangeDatePicker;\n    const _this$state = this.state,\n          nacionalidades = _this$state.nacionalidades,\n          ciudades = _this$state.ciudades,\n          provincias = _this$state.provincias,\n          distritos = _this$state.distritos;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const dateFormat = 'DD/MM/YYYY';\n    const config = {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: 'Por favor seleccione la fecha de su nacimiento'\n      }]\n    };\n\n    function handleChanges(value) {\n      console.log(\"se ha seleccionado \".concat(value));\n    }\n\n    return React.createElement(Layout, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      style: {\n        width: \"75%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Fecha de Nacimiento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, getFieldDecorator('fechaNac', {\n      initialValue: moment(ficha.fch_nacimiento_per, dateFormat)\n    }, config)(React.createElement(DatePicker, {\n      defaultPickerValue: moment(ficha.fch_nacimiento_per),\n      placeholder: \"25/11/1999\",\n      format: 'DD-MM-YYYY',\n      onChange: handleChangeDatePicker('fch_nacimiento_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Pa\\xEDs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, getFieldDecorator('pais', {\n      initialValue: ficha.id_nac_pais_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione el país.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Perú\",\n      onChange: handleChanges,\n      showSearch: true,\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, nacionalidades.map(nacionalidad => React.createElement(Option, {\n      value: nacionalidad.CodNac,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, nacionalidad.Descripcion))))), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, getFieldDecorator('ciudad', {\n      initialValue: ficha.id_nac_ciudad_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la ciudad.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione ciudad\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, getFieldDecorator('provincia', {\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la provincia.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"DNI\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, tiposDocumentos.map(tipoDocumento => React.createElement(Option, {\n      value: tipoDocumento.id_tipo_doc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, tipoDocumento.desc_tipo_doc))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, getFieldDecorator('distrito', {\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione el distrito.'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Form.create()(LugarFechaNacimiento);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\components\\LugarFechaNacimiento.jsx"],"names":["React","Form","Input","Button","Select","DatePicker","Layout","Icon","moment","Option","Footer","idPais","LugarFechaNacimiento","Component","constructor","props","siguiente","e","preventDefault","regresar","state","nacionalidades","ciudades","provincias","distritos","componentDidMount","getPaises","fetch","then","response","json","data","setState","getCiudades","console","log","getProvincias","getDistritos","render","ficha","handleChangeInput","handleChangeSelect","handleChangeDatePicker","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","dateFormat","config","rules","type","required","message","handleChanges","value","background","width","initialValue","fch_nacimiento_per","id_nac_pais_per","input","option","children","toLowerCase","indexOf","map","nacionalidad","CodNac","Descripcion","id_nac_ciudad_per","ciudad","CodCiudad","descripcion","tiposDocumentos","tipoDocumento","id_tipo_doc","desc_tipo_doc","create"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Form, Input, Button, Select, DatePicker, Layout, Icon} from 'antd';\r\nimport moment from \"moment\";\r\n\r\nconst {Option} = Select;\r\nconst {Footer} = Layout;\r\n\r\nlet idPais = '';\r\n\r\nclass LugarFechaNacimiento extends React.Component {\r\n\r\n    siguiente = e => {\r\n        e.preventDefault();\r\n        this.props.siguiente();\r\n    };\r\n\r\n    regresar = e => {\r\n        e.preventDefault();\r\n        this.props.regresar();\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nacionalidades: [],\r\n            ciudades: [],\r\n            provincias: [],\r\n            distritos: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPaises();\r\n    }\r\n\r\n    getPaises() {\r\n        fetch('http://localhost/FichaWeb/app/controller/nacionalidad/read.php')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({nacionalidades: data}));\r\n    }\r\n\r\n    getCiudades() {\r\n        fetch(`http://localhost/FichaWeb/app/controller/ciudad/read.php?idPais=${idPais}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ciudades: data}));\r\n        console.log(idPais);\r\n    }\r\n\r\n    getProvincias() {\r\n\r\n    }\r\n\r\n    getDistritos() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const {ficha, handleChangeInput, handleChangeSelect, handleChangeDatePicker} = this.props;\r\n        const {nacionalidades, ciudades, provincias, distritos} = this.state;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: {span: 24},\r\n                sm: {span: 8},\r\n            },\r\n            wrapperCol: {\r\n                xs: {span: 24},\r\n                sm: {span: 16},\r\n            },\r\n        };\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n        const dateFormat = 'DD/MM/YYYY';\r\n        const config = {\r\n            rules: [{type: 'object', required: true, message: 'Por favor seleccione la fecha de su nacimiento'}],\r\n        };\r\n\r\n        function handleChanges(value) {\r\n            console.log(`se ha seleccionado ${value}`);\r\n        }\r\n\r\n        return (\r\n            <Layout style={{background: \"white\"}}>\r\n                <Form {...formItemLayout} style={{width: \"75%\"}}>\r\n                    <Form.Item label=\"Fecha de Nacimiento\">\r\n                        {getFieldDecorator('fechaNac', {\r\n                            initialValue: moment(ficha.fch_nacimiento_per, dateFormat),\r\n\r\n                        }, config)\r\n                        (\r\n                            <DatePicker defaultPickerValue={moment(ficha.fch_nacimiento_per)} placeholder={\"25/11/1999\"}\r\n                                        format={'DD-MM-YYYY'}\r\n                                        onChange={handleChangeDatePicker('fch_nacimiento_per')}\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"País\">\r\n                        {getFieldDecorator('pais', {\r\n                            initialValue: ficha.id_nac_pais_per,\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Por favor seleccione el país.',\r\n                                },\r\n                            ],\r\n                        })(\r\n                            <Select\r\n                                placeholder={\"Perú\"}\r\n                                onChange={handleChanges}\r\n                                showSearch={true}\r\n                                optionFilterProp={\"children\"}\r\n                                filterOption={(input, option) =>\r\n                                    option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                {\r\n                                    nacionalidades.map(nacionalidad =>\r\n                                        <Option value={nacionalidad.CodNac}>{nacionalidad.Descripcion}</Option>\r\n                                    )\r\n                                }\r\n                            </Select>)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Ciudad\">\r\n                        {getFieldDecorator('ciudad', {\r\n                            initialValue: ficha.id_nac_ciudad_per,\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Por favor seleccione la ciudad.',\r\n                                },\r\n                            ],\r\n                        })(\r\n                            <Select placeholder={\"Seleccione ciudad\"} onChange={handleChanges}>\r\n                                {\r\n                                    ciudades.map(ciudad =>\r\n                                        <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>)\r\n                                }\r\n                            </Select>)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Provincia\">\r\n                        {getFieldDecorator('provincia', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Por favor seleccione la provincia.',\r\n                                },\r\n                            ],\r\n                        })(\r\n                            <Select placeholder={\"DNI\"} onChange={handleChanges}>\r\n                                {tiposDocumentos.map(tipoDocumento =>\r\n                                    <Option value={tipoDocumento.id_tipo_doc}>{tipoDocumento.desc_tipo_doc}</Option>\r\n                                )}\r\n                            </Select>)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Distrito\">\r\n                        {getFieldDecorator('distrito', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Por favor seleccione el distrito.',\r\n                                },\r\n                            ],\r\n                        })(<Input/>)}\r\n                    </Form.Item>\r\n                </Form>\r\n            </Layout>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Form.create()(LugarFechaNacimiento);"]},"metadata":{},"sourceType":"module"}