{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\components\\\\NivelEducativo.jsx\";\nimport React from 'react';\nimport { Form, Input, Button, Select, DatePicker, Layout, Icon } from 'antd';\nconst TextArea = Input.TextArea;\nconst Option = Select.Option;\nconst Footer = Layout.Footer;\n\nclass NivelEducativo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.siguiente = e => {\n      e.preventDefault();\n      this.props.siguiente();\n    };\n\n    this.regresar = e => {\n      e.preventDefault();\n      this.props.regresar();\n    };\n\n    this.state = {\n      nacionalidades: [],\n      ciudades: [],\n      provincias: [],\n      distritos: []\n    };\n  }\n\n  componentDidMount() {\n    this.getPaises();\n    this.getCiudades();\n    this.getProvincias();\n    this.getDistritos();\n  }\n\n  getPaises() {\n    fetch('http://localhost/FichaWeb/app/controller/nacionalidad/read.php').then(response => response.json()).then(data => this.setState({\n      nacionalidades: data\n    }));\n  }\n\n  getCiudades() {\n    fetch('http://localhost/FichaWeb/app/controller/ciudad/read.php/?idPais=9589').then(response => response.json()).then(data => this.setState({\n      ciudades: data\n    }));\n  }\n\n  getProvincias() {\n    fetch('http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919').then(response => response.json()).then(data => this.setState({\n      provincias: data\n    }));\n  }\n\n  getDistritos() {\n    fetch('http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301').then(response => response.json()).then(data => this.setState({\n      distritos: data\n    }));\n  }\n\n  render() {\n    const nacionalidades = this.state.nacionalidades;\n    const ciudades = this.state.ciudades;\n    const provincias = this.state.provincias;\n    const distritos = this.state.distritos;\n    const _this$props = this.props,\n          ficha = _this$props.ficha,\n          handleChangeInput = _this$props.handleChangeInput,\n          handleChangeSelect = _this$props.handleChangeSelect;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const config = {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: 'Por favor seleccione la fecha de su nacimiento  '\n      }]\n    };\n\n    function handleChanges(value) {\n      console.log(\"se ha seleccionado \".concat(value));\n    }\n\n    return React.createElement(Layout, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      style: {\n        width: \"75%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Pais\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, getFieldDecorator('pais', {\n      initialValue: ficha.id_,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la ciudad.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione en caso tenga alguna discapacidad\",\n      onChange: handleChangeSelect('id_res_ciudad_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, getFieldDecorator('ciudad', {\n      initialValue: ficha.id_res_ciudad_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la ciudad.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione en caso tenga alguna discapacidad\",\n      onChange: handleChangeSelect('id_res_ciudad_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, getFieldDecorator('provincia', {\n      initialValue: ficha.id_res_provincia_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la ciudad.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione en caso tenga alguna discapacidad\",\n      onChange: handleChangeSelect('id_res_ciudad_per'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, provincia.descripcion)))))));\n  }\n\n}\n\nexport default Form.create()(NivelEducativo);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\components\\NivelEducativo.jsx"],"names":["React","Form","Input","Button","Select","DatePicker","Layout","Icon","TextArea","Option","Footer","NivelEducativo","Component","constructor","props","siguiente","e","preventDefault","regresar","state","nacionalidades","ciudades","provincias","distritos","componentDidMount","getPaises","getCiudades","getProvincias","getDistritos","fetch","then","response","json","data","setState","render","ficha","handleChangeInput","handleChangeSelect","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","config","rules","type","required","message","handleChanges","value","console","log","background","width","initialValue","id_","map","ciudad","CodCiudad","descripcion","id_res_ciudad_per","id_res_provincia_per","provincia","CodProv","create"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Form, Input, Button, Select, DatePicker, Layout, Icon} from 'antd';\r\n\r\nconst {TextArea} = Input;\r\nconst {Option} = Select;\r\nconst {Footer} = Layout;\r\n\r\nclass NivelEducativo extends React.Component {\r\n\r\n  siguiente = e => {\r\n    e.preventDefault();\r\n    this.props.siguiente();\r\n  };\r\n\r\n  regresar = e => {\r\n    e.preventDefault();\r\n    this.props.regresar();\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      nacionalidades: [],\r\n      ciudades: [],\r\n      provincias: [],\r\n      distritos: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPaises();\r\n    this.getCiudades();\r\n    this.getProvincias();\r\n    this.getDistritos();\r\n  }\r\n\r\n  getPaises() {\r\n    fetch('http://localhost/FichaWeb/app/controller/nacionalidad/read.php')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({nacionalidades: data}));\r\n  }\r\n\r\n  getCiudades() {\r\n    fetch('http://localhost/FichaWeb/app/controller/ciudad/read.php/?idPais=9589')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ciudades: data}));\r\n  }\r\n\r\n  getProvincias() {\r\n    fetch('http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({provincias: data}));\r\n  }\r\n\r\n  getDistritos() {\r\n    fetch('http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({distritos: data}));\r\n  }\r\n\r\n  render() {\r\n\r\n    const {nacionalidades} = this.state;\r\n    const {ciudades} = this.state;\r\n    const {provincias} = this.state;\r\n    const {distritos} = this.state;\r\n    const {ficha, handleChangeInput, handleChangeSelect} = this.props;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 8},\r\n      },\r\n      wrapperCol: {\r\n        xs: {span: 24},\r\n        sm: {span: 16},\r\n      },\r\n    };\r\n\r\n    const {getFieldDecorator} = this.props.form;\r\n    const config = {\r\n      rules: [{type: 'object', required: true, message: 'Por favor seleccione la fecha de su nacimiento  '}],\r\n    };\r\n\r\n    function handleChanges(value) {\r\n      console.log(`se ha seleccionado ${value}`);\r\n    }\r\n\r\n    return (\r\n      <Layout style={{background: \"white\"}}>\r\n        <Form {...formItemLayout} style={{width: \"75%\"}}>\r\n          <Form.Item label=\"Pais\">\r\n            {getFieldDecorator('pais', {\r\n              initialValue: ficha.id_,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor seleccione la ciudad.',\r\n                },\r\n              ],\r\n            })(\r\n              <Select placeholder={\"Seleccione en caso tenga alguna discapacidad\"}\r\n                      onChange={handleChangeSelect('id_res_ciudad_per')}>\r\n                {ciudades.map(ciudad =>\r\n                  <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>\r\n                )}\r\n              </Select>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"Ciudad\">\r\n            {getFieldDecorator('ciudad', {\r\n              initialValue: ficha.id_res_ciudad_per,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor seleccione la ciudad.',\r\n                },\r\n              ],\r\n            })(\r\n              <Select placeholder={\"Seleccione en caso tenga alguna discapacidad\"}\r\n                      onChange={handleChangeSelect('id_res_ciudad_per')}>\r\n                {ciudades.map(ciudad =>\r\n                  <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>\r\n                )}\r\n              </Select>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label=\"Provincia\">\r\n            {getFieldDecorator('provincia', {\r\n              initialValue: ficha.id_res_provincia_per,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: 'Por favor seleccione la ciudad.',\r\n                },\r\n              ],\r\n            })(\r\n              <Select placeholder={\"Seleccione en caso tenga alguna discapacidad\"}\r\n                      onChange={handleChangeSelect('id_res_ciudad_per')}>\r\n                {provincias.map(provincia =>\r\n                  <Option value={provincia.CodProv}>{provincia.descripcion}</Option>\r\n                )}\r\n              </Select>\r\n            )}\r\n          </Form.Item>\r\n\r\n        </Form>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Form.create()(NivelEducativo);"]},"metadata":{},"sourceType":"module"}