{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\components\\\\LugarFechaNacimiento.jsx\";\nimport React from \"react\";\nimport { Form, Select, DatePicker, Layout } from \"antd\";\nimport moment from \"moment\";\nconst Option = Select.Option;\nlet idPais = \"\";\n\nclass LugarFechaNacimiento extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.siguiente = e => {\n      e.preventDefault();\n      this.props.siguiente();\n    };\n\n    this.regresar = e => {\n      e.preventDefault();\n      this.props.regresar();\n    };\n\n    this.getPaises = async () => {\n      const response = await fetch(\"http://localhost/FichaWeb/app/controller/nacionalidad/read.php\");\n      const data = await response.json();\n      await this.setState({\n        nacionalidades: data\n      });\n    };\n\n    this.getCiudades = async () => {\n      const response = await fetch(\"http://localhost/FichaWeb/app/controller/ciudad/read.php?idPais=9589\");\n      const data = await response.json();\n      await this.setState({\n        ciudades: data\n      });\n    };\n\n    this.getProvincias = async () => {\n      const response = await fetch(\"http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919\");\n      const data = response.json();\n      await this.setState({\n        provincias: data\n      });\n    };\n\n    this.getDistritos = async () => {\n      const response = await fetch(\"http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301\");\n      const data = await response.json();\n      await this.setState({\n        distritos: data\n      });\n    };\n\n    this.state = {\n      nacionalidades: [],\n      ciudades: [],\n      provincias: [],\n      distritos: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.getPaises();\n    await this.getCiudades();\n    await this.getProvincias();\n    await this.getDistritos();\n  }\n\n  render() {\n    const _this$props = this.props,\n          ficha = _this$props.ficha,\n          handleChangeSelect = _this$props.handleChangeSelect,\n          handleChangeDatePicker = _this$props.handleChangeDatePicker;\n    const _this$state = this.state,\n          nacionalidades = _this$state.nacionalidades,\n          ciudades = _this$state.ciudades,\n          provincias = _this$state.provincias,\n          distritos = _this$state.distritos;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const dateFormat = \"DD-MM-YYYY\";\n    return React.createElement(Layout, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Fecha de Nacimiento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, getFieldDecorator(\"fechaNac\", {\n      initialValue: ficha.fch_nacimiento_per == \"\" ? moment(\"25-11-1999\", dateFormat) : moment(ficha.fch_nacimiento_per, dateFormat),\n      rules: [{\n        type: \"object\",\n        required: true,\n        message: \"Por favor seleccione la fecha de su nacimiento\"\n      }]\n    })(React.createElement(DatePicker, {\n      defaultPickerValue: moment(ficha.fch_nacimiento_per),\n      placeholder: \"25-11-1999\",\n      format: dateFormat,\n      onChange: handleChangeDatePicker(\"fch_nacimiento_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Pa\\xEDs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, getFieldDecorator(\"pais\", {\n      initialValue: ficha.id_nac_pais_per == \"\" || ficha.id_nac_pais_per == null ? \"9589\" : ficha.id_nac_pais_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione el país.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Perú\",\n      onChange: handleChangeSelect(\"id_nac_pais_per\"),\n      showSearch: true,\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, nacionalidades.map(nacionalidad => React.createElement(Option, {\n      value: nacionalidad.CodNac,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, nacionalidad.Descripcion))))), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, getFieldDecorator(\"ciudad\", {\n      initialValue: ficha.id_nac_ciudad_per == \"\" || ficha.id_nac_ciudad_per == null ? \"2919\" : ficha.id_nac_ciudad_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la ciudad.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione ciudad\",\n      onChange: handleChangeSelect(\"id_nac_ciudad_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, getFieldDecorator(\"provincia\", {\n      initialValue: ficha.id_nac_provincia_per == \"\" || ficha.id_nac_provincia_per == null ? \"2301\" : ficha.id_nac_provincia_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la provincia.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione la provincia\",\n      onChange: handleChangeSelect(\"id_nac_provincia_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, provincia.descripcion))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, getFieldDecorator(\"distrito\", {\n      initialValue: ficha.id_nac_distrito_per == \"\" || ficha.id_nac_distrito_per == null ? \"230101\" : ficha.id_nac_distrito_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione el distrito.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione el distrito\",\n      onChange: handleChangeSelect(\"id_nac_distrito_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, distritos.map(distrito => React.createElement(Option, {\n      value: distrito.CodDist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, distrito.descripcion)))))));\n  }\n\n}\n\nexport default Form.create()(LugarFechaNacimiento);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\components\\LugarFechaNacimiento.jsx"],"names":["React","Form","Select","DatePicker","Layout","moment","Option","idPais","LugarFechaNacimiento","Component","constructor","props","siguiente","e","preventDefault","regresar","getPaises","response","fetch","data","json","setState","nacionalidades","getCiudades","ciudades","getProvincias","provincias","getDistritos","distritos","state","componentDidMount","render","ficha","handleChangeSelect","handleChangeDatePicker","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","dateFormat","background","initialValue","fch_nacimiento_per","rules","type","required","message","id_nac_pais_per","input","option","children","toLowerCase","indexOf","map","nacionalidad","CodNac","Descripcion","id_nac_ciudad_per","ciudad","CodCiudad","descripcion","id_nac_provincia_per","provincia","CodProv","id_nac_distrito_per","distrito","CodDist","create"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,EAAmCC,MAAnC,QAAiD,MAAjD;AACA,OAAOC,MAAP,MAAmB,QAAnB;MAEQC,M,GAAWJ,M,CAAXI,M;AAER,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,oBAAN,SAAmCR,KAAK,CAACS,SAAzC,CAAmD;AAWjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAVnBC,SAUmB,GAVPC,CAAC,IAAI;AACfA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,KAAL,CAAWC,SAAX;AACD,KAOkB;;AAAA,SALnBG,QAKmB,GALRF,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,KAAL,CAAWI,QAAX;AACD,KAEkB;;AAAA,SAkBnBC,SAlBmB,GAkBP,YAAY;AACtB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,CAA5B;AAIA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAM,KAAKC,QAAL,CAAc;AAClBC,QAAAA,cAAc,EAAEH;AADE,OAAd,CAAN;AAGD,KA3BkB;;AAAA,SA6BnBI,WA7BmB,GA6BL,YAAY;AACxB,YAAMN,QAAQ,GAAG,MAAMC,KAAK,wEAA5B;AAGA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAM,KAAKC,QAAL,CAAc;AAClBG,QAAAA,QAAQ,EAAEL;AADQ,OAAd,CAAN;AAGD,KArCkB;;AAAA,SAuCnBM,aAvCmB,GAuCH,YAAY;AAC1B,YAAMR,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4EAD0B,CAA5B;AAIA,YAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAT,EAAb;AACA,YAAM,KAAKC,QAAL,CAAc;AAClBK,QAAAA,UAAU,EAAEP;AADM,OAAd,CAAN;AAGD,KAhDkB;;AAAA,SAkDnBQ,YAlDmB,GAkDJ,YAAY;AACzB,YAAMV,QAAQ,GAAG,MAAMC,KAAK,CAC1B,wGAD0B,CAA5B;AAGA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAM,KAAKC,QAAL,CAAc;AAClBO,QAAAA,SAAS,EAAET;AADO,OAAd,CAAN;AAGD,KA1DkB;;AAGjB,SAAKU,KAAL,GAAa;AACXP,MAAAA,cAAc,EAAE,EADL;AAEXE,MAAAA,QAAQ,EAAE,EAFC;AAGXE,MAAAA,UAAU,EAAE,EAHD;AAIXE,MAAAA,SAAS,EAAE;AAJA,KAAb;AAMD;;AAED,QAAME,iBAAN,GAA0B;AACxB,UAAM,KAAKd,SAAL,EAAN;AACA,UAAM,KAAKO,WAAL,EAAN;AACA,UAAM,KAAKE,aAAL,EAAN;AACA,UAAM,KAAKE,YAAL,EAAN;AACD;;AA4CDI,EAAAA,MAAM,GAAG;AAAA,wBACuD,KAAKpB,KAD5D;AAAA,UACCqB,KADD,eACCA,KADD;AAAA,UACQC,kBADR,eACQA,kBADR;AAAA,UAC4BC,sBAD5B,eAC4BA,sBAD5B;AAAA,wBAEqD,KAAKL,KAF1D;AAAA,UAECP,cAFD,eAECA,cAFD;AAAA,UAEiBE,QAFjB,eAEiBA,QAFjB;AAAA,UAE2BE,UAF3B,eAE2BA,UAF3B;AAAA,UAEuCE,SAFvC,eAEuCA,SAFvC;AAIP,UAAMO,cAAc,GAAG;AACrBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADI;AAERC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFI,OADW;AAKrBE,MAAAA,UAAU,EAAE;AACVH,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADM;AAEVC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFM;AALS,KAAvB;AAJO,UAeCG,iBAfD,GAeuB,KAAK9B,KAAL,CAAW+B,IAflC,CAeCD,iBAfD;AAgBP,UAAME,UAAU,GAAG,YAAnB;AAEA,WACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,oBAAUT,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,iBAAiB,CAAC,UAAD,EAAa;AAC7BI,MAAAA,YAAY,EACVb,KAAK,CAACc,kBAAN,IAA4B,EAA5B,GACIzC,MAAM,CAAC,YAAD,EAAesC,UAAf,CADV,GAEItC,MAAM,CAAC2B,KAAK,CAACc,kBAAP,EAA2BH,UAA3B,CAJiB;AAK7BI,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,IAAI,EAAE,QADR;AAEEC,QAAAA,QAAQ,EAAE,IAFZ;AAGEC,QAAAA,OAAO,EAAE;AAHX,OADK;AALsB,KAAb,CAAjB,CAaC,oBAAC,UAAD;AACE,MAAA,kBAAkB,EAAE7C,MAAM,CAAC2B,KAAK,CAACc,kBAAP,CAD5B;AAEE,MAAA,WAAW,EAAE,YAFf;AAGE,MAAA,MAAM,EAAEH,UAHV;AAIE,MAAA,QAAQ,EAAET,sBAAsB,CAAC,oBAAD,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbD,CADH,CADF,EAwBE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGO,iBAAiB,CAAC,MAAD,EAAS;AACzBI,MAAAA,YAAY,EACVb,KAAK,CAACmB,eAAN,IAAyB,EAAzB,IAA+BnB,KAAK,CAACmB,eAAN,IAAyB,IAAxD,GACI,MADJ,GAEInB,KAAK,CAACmB,eAJa;AAKzBJ,MAAAA,KAAK,EAAE,CACL;AACEE,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AALkB,KAAT,CAAjB,CAYC,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,MADf;AAEE,MAAA,QAAQ,EAAEjB,kBAAkB,CAAC,iBAAD,CAF9B;AAGE,MAAA,UAAU,EAAE,IAHd;AAIE,MAAA,gBAAgB,EAAE,UAJpB;AAKE,MAAA,YAAY,EAAE,CAACmB,KAAD,EAAQC,MAAR,KACZA,MAAM,CAAC1C,KAAP,CAAa2C,QAAb,CACGC,WADH,GAEGC,OAFH,CAEWJ,KAAK,CAACG,WAAN,EAFX,KAEmC,CARvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWGjC,cAAc,CAACmC,GAAf,CAAmBC,YAAY,IAC9B,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,YAAY,CAACC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,YAAY,CAACE,WADhB,CADD,CAXH,CAZD,CADH,CAxBF,EAwDE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnB,iBAAiB,CAAC,QAAD,EAAW;AAC3BI,MAAAA,YAAY,EACVb,KAAK,CAAC6B,iBAAN,IAA2B,EAA3B,IAAiC7B,KAAK,CAAC6B,iBAAN,IAA2B,IAA5D,GACI,MADJ,GAEI7B,KAAK,CAAC6B,iBAJe;AAK3Bd,MAAAA,KAAK,EAAE,CACL;AACEE,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AALoB,KAAX,CAAjB,CAYC,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,mBADf;AAEE,MAAA,QAAQ,EAAEjB,kBAAkB,CAAC,mBAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGT,QAAQ,CAACiC,GAAT,CAAaK,MAAM,IAClB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCD,MAAM,CAACE,WAAzC,CADD,CAJH,CAZD,CADH,CAxDF,EA+EE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGvB,iBAAiB,CAAC,WAAD,EAAc;AAC9BI,MAAAA,YAAY,EACVb,KAAK,CAACiC,oBAAN,IAA8B,EAA9B,IACAjC,KAAK,CAACiC,oBAAN,IAA8B,IAD9B,GAEI,MAFJ,GAGIjC,KAAK,CAACiC,oBALkB;AAM9BlB,MAAAA,KAAK,EAAE,CACL;AACEE,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AANuB,KAAd,CAAjB,CAaC,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,yBADf;AAEE,MAAA,QAAQ,EAAEjB,kBAAkB,CAAC,sBAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGP,UAAU,CAAC+B,GAAX,CAAeS,SAAS,IACvB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,SAAS,CAACC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,SAAS,CAACF,WADb,CADD,CAJH,CAbD,CADH,CA/EF,EAyGE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGvB,iBAAiB,CAAC,UAAD,EAAa;AAC7BI,MAAAA,YAAY,EACVb,KAAK,CAACoC,mBAAN,IAA6B,EAA7B,IACApC,KAAK,CAACoC,mBAAN,IAA6B,IAD7B,GAEI,QAFJ,GAGIpC,KAAK,CAACoC,mBALiB;AAM7BrB,MAAAA,KAAK,EAAE,CACL;AACEE,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AANsB,KAAb,CAAjB,CAaC,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,wBADf;AAEE,MAAA,QAAQ,EAAEjB,kBAAkB,CAAC,qBAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGL,SAAS,CAAC6B,GAAV,CAAcY,QAAQ,IACrB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,QAAQ,CAACC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACL,WADZ,CADD,CAJH,CAbD,CADH,CAzGF,CADF,CADF;AAwID;;AAjOgD;;AAoOnD,eAAe/D,IAAI,CAACsE,MAAL,GAAc/D,oBAAd,CAAf","sourcesContent":["import React from \"react\";\nimport { Form, Select, DatePicker, Layout } from \"antd\";\nimport moment from \"moment\";\n\nconst { Option } = Select;\n\nlet idPais = \"\";\n\nclass LugarFechaNacimiento extends React.Component {\n  siguiente = e => {\n    e.preventDefault();\n    this.props.siguiente();\n  };\n\n  regresar = e => {\n    e.preventDefault();\n    this.props.regresar();\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nacionalidades: [],\n      ciudades: [],\n      provincias: [],\n      distritos: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.getPaises();\n    await this.getCiudades();\n    await this.getProvincias();\n    await this.getDistritos();\n  }\n\n  getPaises = async () => {\n    const response = await fetch(\n      \"http://localhost/FichaWeb/app/controller/nacionalidad/read.php\"\n    );\n\n    const data = await response.json();\n    await this.setState({\n      nacionalidades: data\n    });\n  };\n\n  getCiudades = async () => {\n    const response = await fetch(\n      `http://localhost/FichaWeb/app/controller/ciudad/read.php?idPais=9589`\n    );\n    const data = await response.json();\n    await this.setState({\n      ciudades: data\n    });\n  };\n\n  getProvincias = async () => {\n    const response = await fetch(\n      \"http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919\"\n    );\n\n    const data = response.json();\n    await this.setState({\n      provincias: data\n    });\n  };\n\n  getDistritos = async () => {\n    const response = await fetch(\n      \"http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301\"\n    );\n    const data = await response.json();\n    await this.setState({\n      distritos: data\n    });\n  };\n\n  render() {\n    const { ficha, handleChangeSelect, handleChangeDatePicker } = this.props;\n    const { nacionalidades, ciudades, provincias, distritos } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    const { getFieldDecorator } = this.props.form;\n    const dateFormat = \"DD-MM-YYYY\";\n\n    return (\n      <Layout style={{ background: \"white\" }}>\n        <Form {...formItemLayout}>\n          <Form.Item label=\"Fecha de Nacimiento\">\n            {getFieldDecorator(\"fechaNac\", {\n              initialValue:\n                ficha.fch_nacimiento_per == \"\"\n                  ? moment(\"25-11-1999\", dateFormat)\n                  : moment(ficha.fch_nacimiento_per, dateFormat),\n              rules: [\n                {\n                  type: \"object\",\n                  required: true,\n                  message: \"Por favor seleccione la fecha de su nacimiento\"\n                }\n              ]\n            })(\n              <DatePicker\n                defaultPickerValue={moment(ficha.fch_nacimiento_per)}\n                placeholder={\"25-11-1999\"}\n                format={dateFormat}\n                onChange={handleChangeDatePicker(\"fch_nacimiento_per\")}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"País\">\n            {getFieldDecorator(\"pais\", {\n              initialValue:\n                ficha.id_nac_pais_per == \"\" || ficha.id_nac_pais_per == null\n                  ? \"9589\"\n                  : ficha.id_nac_pais_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione el país.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Perú\"}\n                onChange={handleChangeSelect(\"id_nac_pais_per\")}\n                showSearch={true}\n                optionFilterProp={\"children\"}\n                filterOption={(input, option) =>\n                  option.props.children\n                    .toLowerCase()\n                    .indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {nacionalidades.map(nacionalidad => (\n                  <Option value={nacionalidad.CodNac}>\n                    {nacionalidad.Descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Ciudad\">\n            {getFieldDecorator(\"ciudad\", {\n              initialValue:\n                ficha.id_nac_ciudad_per == \"\" || ficha.id_nac_ciudad_per == null\n                  ? \"2919\"\n                  : ficha.id_nac_ciudad_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la ciudad.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione ciudad\"}\n                onChange={handleChangeSelect(\"id_nac_ciudad_per\")}\n              >\n                {ciudades.map(ciudad => (\n                  <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Provincia\">\n            {getFieldDecorator(\"provincia\", {\n              initialValue:\n                ficha.id_nac_provincia_per == \"\" ||\n                ficha.id_nac_provincia_per == null\n                  ? \"2301\"\n                  : ficha.id_nac_provincia_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la provincia.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione la provincia\"}\n                onChange={handleChangeSelect(\"id_nac_provincia_per\")}\n              >\n                {provincias.map(provincia => (\n                  <Option value={provincia.CodProv}>\n                    {provincia.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Distrito\">\n            {getFieldDecorator(\"distrito\", {\n              initialValue:\n                ficha.id_nac_distrito_per == \"\" ||\n                ficha.id_nac_distrito_per == null\n                  ? \"230101\"\n                  : ficha.id_nac_distrito_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione el distrito.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione el distrito\"}\n                onChange={handleChangeSelect(\"id_nac_distrito_per\")}\n              >\n                {distritos.map(distrito => (\n                  <Option value={distrito.CodDist}>\n                    {distrito.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default Form.create()(LugarFechaNacimiento);\n"]},"metadata":{},"sourceType":"module"}