{"ast":null,"code":"import _objectSpread from \"D:\\\\Projects\\\\ficha\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\components\\\\LugarFechaNacimiento.jsx\";\nimport React from \"react\";\nimport { Form, Select, DatePicker, Layout } from \"antd\";\nimport moment from \"moment\";\nconst Option = Select.Option; // const apiUrl = 'https://net.upt.edu.pe/FichaDatos/FichaWeb/modules';\n\nconst apiUrl = \"http://localhost/FichaDatos/FichaWeb/modules\";\n\nclass LugarFechaNacimiento extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.siguiente = e => {\n      e.preventDefault();\n      this.props.siguiente();\n    };\n\n    this.regresar = e => {\n      e.preventDefault();\n      this.props.regresar();\n    };\n\n    this.getPaises = async () => {\n      const response = await fetch(\"\".concat(apiUrl, \"/Nacionalidad.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ));\n      const data = await response.json();\n      this.setState({\n        nacionalidades: data\n      });\n    };\n\n    this.getCiudades = async () => {\n      // const response = await fetch(\n      //   `${apiUrl}/Ciudad.php?p=read&session=${this.state.session}&CodUniv=${\n      //     this.state.cod_univ\n      //   }&idPais=${this.state.ficha.id_nac_pais_per}`\n      // );\n      // const response = await fetch(\n      //   `${apiUrl}/Ciudad.php?p=read&session=${this.state.session}&CodUniv=${\n      //     this.state.cod_univ\n      //   }`\n      // );\n      // const data = await response.json();\n      // await this.setState({\n      //   ciudades: data,\n      //   ficha: {\n      //     ...this.state.ficha,\n      //     id_nac_ciudad_per: data[0].CodCiudad\n      //   }\n      // });\n      const ciudades = [];\n\n      for (let index = 0; index < this.state.ciudadesNac.length; index++) {\n        if (this.state.ciudadesNac[index].relacion == this.state.ficha.id_nac_pais_per) {\n          ciudades.push(this.state.ciudadesNac[index]);\n        }\n      }\n\n      if (ciudades.length > 0) {\n        await this.setState({\n          ciudades: ciudades,\n          ficha: _objectSpread({}, this.state.ficha, {\n            id_nac_ciudad_per: ciudades[0].CodCiudad\n          })\n        });\n      }\n    };\n\n    this.getProvincias = async () => {// const response = await fetch(\n      //   `${apiUrl}/Provincia.php?p=read&session=${this.state.session}&CodUniv=${\n      //     this.state.cod_univ\n      //   }&idCiudad=${this.state.ficha.id_nac_ciudad_per}`\n      // );\n      // const data = await response.json();\n      // await this.setState({\n      //   provincias: data,\n      //   ficha: {\n      //     ...this.state.ficha,\n      //     id_nac_provincia_per: data[0].CodProv\n      //   }\n      // });\n      // const provincias = [];\n      // for (let index = 0; index < this.state.ciudadesNac.length; index++) {\n      //   if (\n      //     this.state.ciudadesNac[index].relacion ==\n      //     this.state.ficha.id_nac_pais_per\n      //   ) {\n      //     ciudades.push(this.state.ciudadesNac[index]);\n      //   }\n      // }\n      // if (ciudades.length > 0) {\n      //   await this.setState({\n      //     ciudades: ciudades,\n      //     ficha: {\n      //       ...this.state.ficha,\n      //       id_nac_ciudad_per: ciudades[0].CodCiudad\n      //     }\n      //   });\n      // }\n    };\n\n    this.getDistritos = async () => {\n      const response = await fetch(\"\".concat(apiUrl, \"/Distrito.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ, \"&idPais=9589&idCiudad=\").concat(this.state.ficha.id_nac_ciudad_per, \"&idProvincia=\").concat(this.state.ficha.id_nac_provincia_per));\n      const data = await response.json();\n      await this.setState({\n        distritos: data,\n        ficha: _objectSpread({}, this.state.ficha, {\n          id_nac_distrito_per: data[0].CodDist\n        })\n      });\n    };\n\n    this.handleSelectedPais = async e => {\n      await this.setState({\n        ficha: _objectSpread({}, this.state.ficha, {\n          id_nac_pais_per: e\n        })\n      });\n      await this.getCiudades();\n    };\n\n    this.handleSelectedCiudad = async e => {\n      await this.setState({\n        ficha: _objectSpread({}, this.state.ficha, {\n          id_nac_ciudad_per: e\n        })\n      });\n      await this.getProvincias();\n    };\n\n    this.handleSelectedProvincia = async e => {\n      await this.setState({\n        ficha: _objectSpread({}, this.state.ficha, {\n          id_nac_provincia_per: e\n        })\n      });\n      await this.getDistritos();\n    };\n\n    this.state = {\n      ficha: \"\",\n      paises: [],\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      ciudadesNac: [],\n      session: this.props.session,\n      cod_univ: this.props.cod_univ,\n      cod_ciudad: 2919,\n      cod_provincia: 2101,\n      cod_distrito: 210101\n    };\n  }\n\n  async componentDidMount() {\n    const _this$props = this.props,\n          ficha = _this$props.ficha,\n          paises = _this$props.paises,\n          ciudades = _this$props.ciudades,\n          provincias = _this$props.provincias,\n          distritos = _this$props.distritos;\n    await this.setState({\n      paises: paises,\n      ciudadesNac: ciudades,\n      provincias: provincias,\n      distritos: distritos,\n      ficha: ficha\n    });\n    await this.getCiudades();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          handleChangeSelect = _this$props2.handleChangeSelect,\n          handleChangeDatePicker = _this$props2.handleChangeDatePicker;\n    const _this$state = this.state,\n          ficha = _this$state.ficha,\n          paises = _this$state.paises,\n          ciudades = _this$state.ciudades,\n          provincias = _this$state.provincias,\n          distritos = _this$state.distritos;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const dateFormat = \"YYYY-DD-MM\"; // const dateFormat2 = [\"DD-MM-YYYY\", \"DD-MM-YY\"];\n\n    return React.createElement(Layout, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Fecha de Nacimiento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, getFieldDecorator(\"fechaNac\", {\n      initialValue: ficha.fch_nacimiento_per === \"\" ? moment(\"1999-11-25\", dateFormat) : moment(ficha.fch_nacimiento_per, dateFormat),\n      rules: [{\n        type: \"object\",\n        required: true,\n        message: \"Por favor seleccione la fecha de su nacimiento\"\n      }]\n    })(React.createElement(DatePicker, {\n      defaultPickerValue: moment(ficha.fch_nacimiento_per),\n      placeholder: \"25-11-1999\" // format={dateFormat2}\n      ,\n      onChange: handleChangeDatePicker(\"fch_nacimiento_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Pa\\xEDs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, getFieldDecorator(\"pais\", {\n      initialValue: ficha.id_nac_pais_per === \"\" || ficha.id_nac_pais_per == null ? 9589 : ficha.id_nac_pais_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione el país.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Perú\",\n      onChange: handleChangeSelect(\"id_nac_pais_per\"),\n      onSelect: this.handleSelectedPais,\n      showSearch: true,\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, paises.map(pais => React.createElement(Option, {\n      value: pais.CodNac,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, pais.Descripcion))))), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, getFieldDecorator(\"ciudad\", {\n      initialValue: ficha.id_nac_ciudad_per == null ? 2919 : ficha.id_nac_ciudad_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la ciudad.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione ciudad\",\n      onChange: handleChangeSelect(\"id_nac_ciudad_per\"),\n      onSelect: this.handleSelectedCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, getFieldDecorator(\"provincia\", {\n      initialValue: ficha.id_nac_provincia_per == null ? 2301 : ficha.id_nac_provincia_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la provincia.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione la provincia\",\n      onChange: handleChangeSelect(\"id_nac_provincia_per\"),\n      onSelect: this.handleSelectedProvincia,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, provincia.descripcion))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, getFieldDecorator(\"distrito\", {\n      initialValue: ficha.id_nac_distrito_per == null ? 230101 : ficha.id_nac_distrito_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione el distrito.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione el distrito\",\n      onChange: handleChangeSelect(\"id_nac_distrito_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, distritos.map(distrito => React.createElement(Option, {\n      value: distrito.CodDist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, distrito.descripcion)))))));\n  }\n\n}\n\nexport default Form.create()(LugarFechaNacimiento);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\components\\LugarFechaNacimiento.jsx"],"names":["React","Form","Select","DatePicker","Layout","moment","Option","apiUrl","LugarFechaNacimiento","Component","constructor","props","siguiente","e","preventDefault","regresar","getPaises","response","fetch","state","session","cod_univ","data","json","setState","nacionalidades","getCiudades","ciudades","index","ciudadesNac","length","relacion","ficha","id_nac_pais_per","push","id_nac_ciudad_per","CodCiudad","getProvincias","getDistritos","id_nac_provincia_per","distritos","id_nac_distrito_per","CodDist","handleSelectedPais","handleSelectedCiudad","handleSelectedProvincia","paises","provincias","cod_ciudad","cod_provincia","cod_distrito","componentDidMount","render","handleChangeSelect","handleChangeDatePicker","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","dateFormat","background","initialValue","fch_nacimiento_per","rules","type","required","message","input","option","children","toLowerCase","indexOf","map","pais","CodNac","Descripcion","ciudad","descripcion","provincia","CodProv","distrito","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Select, DatePicker, Layout } from \"antd\";\nimport moment from \"moment\";\n\nconst { Option } = Select;\n\n// const apiUrl = 'https://net.upt.edu.pe/FichaDatos/FichaWeb/modules';\nconst apiUrl = \"http://localhost/FichaDatos/FichaWeb/modules\";\n\nclass LugarFechaNacimiento extends React.Component {\n  siguiente = e => {\n    e.preventDefault();\n    this.props.siguiente();\n  };\n\n  regresar = e => {\n    e.preventDefault();\n    this.props.regresar();\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ficha: \"\",\n      paises: [],\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      ciudadesNac: [],\n      session: this.props.session,\n      cod_univ: this.props.cod_univ,\n      cod_ciudad: 2919,\n      cod_provincia: 2101,\n      cod_distrito: 210101\n    };\n  }\n\n  async componentDidMount() {\n    const { ficha, paises, ciudades, provincias, distritos } = this.props;\n\n    await this.setState({\n      paises: paises,\n      ciudadesNac: ciudades,\n      provincias: provincias,\n      distritos: distritos,\n      ficha: ficha\n    });\n\n    await this.getCiudades();\n  }\n\n  getPaises = async () => {\n    const response = await fetch(\n      `${apiUrl}/Nacionalidad.php?p=read&session=${\n        this.state.session\n      }&CodUniv=${this.state.cod_univ}`\n    );\n\n    const data = await response.json();\n    this.setState({\n      nacionalidades: data\n    });\n  };\n\n  getCiudades = async () => {\n    // const response = await fetch(\n    //   `${apiUrl}/Ciudad.php?p=read&session=${this.state.session}&CodUniv=${\n    //     this.state.cod_univ\n    //   }&idPais=${this.state.ficha.id_nac_pais_per}`\n    // );\n    // const response = await fetch(\n    //   `${apiUrl}/Ciudad.php?p=read&session=${this.state.session}&CodUniv=${\n    //     this.state.cod_univ\n    //   }`\n    // );\n    // const data = await response.json();\n    // await this.setState({\n    //   ciudades: data,\n    //   ficha: {\n    //     ...this.state.ficha,\n    //     id_nac_ciudad_per: data[0].CodCiudad\n    //   }\n    // });\n\n    const ciudades = [];\n\n    for (let index = 0; index < this.state.ciudadesNac.length; index++) {\n      if (\n        this.state.ciudadesNac[index].relacion ==\n        this.state.ficha.id_nac_pais_per\n      ) {\n        ciudades.push(this.state.ciudadesNac[index]);\n      }\n    }\n\n    if (ciudades.length > 0) {\n      await this.setState({\n        ciudades: ciudades,\n        ficha: {\n          ...this.state.ficha,\n          id_nac_ciudad_per: ciudades[0].CodCiudad\n        }\n      });\n    }\n  };\n\n  getProvincias = async () => {\n    // const response = await fetch(\n    //   `${apiUrl}/Provincia.php?p=read&session=${this.state.session}&CodUniv=${\n    //     this.state.cod_univ\n    //   }&idCiudad=${this.state.ficha.id_nac_ciudad_per}`\n    // );\n    // const data = await response.json();\n    // await this.setState({\n    //   provincias: data,\n    //   ficha: {\n    //     ...this.state.ficha,\n    //     id_nac_provincia_per: data[0].CodProv\n    //   }\n    // });\n    // const provincias = [];\n    // for (let index = 0; index < this.state.ciudadesNac.length; index++) {\n    //   if (\n    //     this.state.ciudadesNac[index].relacion ==\n    //     this.state.ficha.id_nac_pais_per\n    //   ) {\n    //     ciudades.push(this.state.ciudadesNac[index]);\n    //   }\n    // }\n    // if (ciudades.length > 0) {\n    //   await this.setState({\n    //     ciudades: ciudades,\n    //     ficha: {\n    //       ...this.state.ficha,\n    //       id_nac_ciudad_per: ciudades[0].CodCiudad\n    //     }\n    //   });\n    // }\n  };\n\n  getDistritos = async () => {\n    const response = await fetch(\n      `${apiUrl}/Distrito.php?p=read&session=${this.state.session}&CodUniv=${\n        this.state.cod_univ\n      }&idPais=9589&idCiudad=${\n        this.state.ficha.id_nac_ciudad_per\n      }&idProvincia=${this.state.ficha.id_nac_provincia_per}`\n    );\n    const data = await response.json();\n    await this.setState({\n      distritos: data,\n      ficha: {\n        ...this.state.ficha,\n        id_nac_distrito_per: data[0].CodDist\n      }\n    });\n  };\n\n  handleSelectedPais = async e => {\n    await this.setState({\n      ficha: {\n        ...this.state.ficha,\n        id_nac_pais_per: e\n      }\n    });\n    await this.getCiudades();\n  };\n\n  handleSelectedCiudad = async e => {\n    await this.setState({\n      ficha: {\n        ...this.state.ficha,\n        id_nac_ciudad_per: e\n      }\n    });\n    await this.getProvincias();\n  };\n\n  handleSelectedProvincia = async e => {\n    await this.setState({\n      ficha: {\n        ...this.state.ficha,\n        id_nac_provincia_per: e\n      }\n    });\n    await this.getDistritos();\n  };\n\n  render() {\n    const { handleChangeSelect, handleChangeDatePicker } = this.props;\n\n    const { ficha, paises, ciudades, provincias, distritos } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    const { getFieldDecorator } = this.props.form;\n    const dateFormat = \"YYYY-DD-MM\";\n    // const dateFormat2 = [\"DD-MM-YYYY\", \"DD-MM-YY\"];\n\n    return (\n      <Layout style={{ background: \"white\" }}>\n        <Form {...formItemLayout}>\n          <Form.Item label=\"Fecha de Nacimiento\">\n            {getFieldDecorator(\"fechaNac\", {\n              initialValue:\n                ficha.fch_nacimiento_per === \"\"\n                  ? moment(\"1999-11-25\", dateFormat)\n                  : moment(ficha.fch_nacimiento_per, dateFormat),\n              rules: [\n                {\n                  type: \"object\",\n                  required: true,\n                  message: \"Por favor seleccione la fecha de su nacimiento\"\n                }\n              ]\n            })(\n              <DatePicker\n                defaultPickerValue={moment(ficha.fch_nacimiento_per)}\n                placeholder={\"25-11-1999\"}\n                // format={dateFormat2}\n                onChange={handleChangeDatePicker(\"fch_nacimiento_per\")}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"País\">\n            {getFieldDecorator(\"pais\", {\n              initialValue:\n                ficha.id_nac_pais_per === \"\" || ficha.id_nac_pais_per == null\n                  ? 9589\n                  : ficha.id_nac_pais_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione el país.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Perú\"}\n                onChange={handleChangeSelect(\"id_nac_pais_per\")}\n                onSelect={this.handleSelectedPais}\n                showSearch={true}\n                optionFilterProp={\"children\"}\n                filterOption={(input, option) =>\n                  option.props.children\n                    .toLowerCase()\n                    .indexOf(input.toLowerCase()) >= 0\n                }\n              >\n                {paises.map(pais => (\n                  <Option value={pais.CodNac}>{pais.Descripcion}</Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Ciudad\">\n            {getFieldDecorator(\"ciudad\", {\n              initialValue:\n                ficha.id_nac_ciudad_per == null\n                  ? 2919\n                  : ficha.id_nac_ciudad_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la ciudad.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione ciudad\"}\n                onChange={handleChangeSelect(\"id_nac_ciudad_per\")}\n                onSelect={this.handleSelectedCiudad}\n              >\n                {ciudades.map(ciudad => (\n                  <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Provincia\">\n            {getFieldDecorator(\"provincia\", {\n              initialValue:\n                ficha.id_nac_provincia_per == null\n                  ? 2301\n                  : ficha.id_nac_provincia_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la provincia.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione la provincia\"}\n                onChange={handleChangeSelect(\"id_nac_provincia_per\")}\n                onSelect={this.handleSelectedProvincia}\n              >\n                {provincias.map(provincia => (\n                  <Option value={provincia.CodProv}>\n                    {provincia.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Distrito\">\n            {getFieldDecorator(\"distrito\", {\n              initialValue:\n                ficha.id_nac_distrito_per == null\n                  ? 230101\n                  : ficha.id_nac_distrito_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione el distrito.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione el distrito\"}\n                onChange={handleChangeSelect(\"id_nac_distrito_per\")}\n              >\n                {distritos.map(distrito => (\n                  <Option value={distrito.CodDist}>\n                    {distrito.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default Form.create()(LugarFechaNacimiento);\n"]},"metadata":{},"sourceType":"module"}