{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\Paso1\\\\Paso1.jsx\";\nimport React from 'react';\nimport { Form, Input, Button, Select, Icon } from 'antd';\nimport { Layout } from \"antd\";\nconst Option = Select.Option;\nconst Footer = Layout.Footer;\n\nclass Paso1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      paso: 1,\n      idiomas: [],\n      discapacidades: [],\n      estadosCiviles: [],\n      tiposDocumentos: [],\n      // fichaPersona: {\n      //     nombre_per: '',\n      //     apellido_pat_per: '',\n      //     apellido_mat_per: '',\n      //     sexo_per: '',\n      //     id_est_civil: '',\n      //     id_tipo_doc: '',\n      //     nro_doc_per: '',\n      //     telefono_per: '',\n      //     celular_per: '',\n      // },\n      fichaPersona: []\n    };\n  }\n\n  componentDidMount() {\n    this.getFichaPersona();\n    this.getIdiomas();\n    this.getDiscapacidades();\n    this.getEstadosCiviles();\n    this.getTipoDocumento();\n  }\n\n  getFichaPersona() {\n    fetch('http://localhost/FichaWeb/app/controller/fichaPersona/read.php').then(response => response.json()).then(data => this.setState({\n      fichaPersona: data\n    }));\n  }\n\n  getIdiomas() {\n    fetch('http://localhost/FichaWeb/app/controller/idioma/read.php').then(response => response.json()).then(data => this.setState({\n      nacionalidades: data\n    }));\n  }\n\n  getDiscapacidades() {\n    fetch('http://localhost/FichaWeb/app/controller/discapacidad/read.php').then(response => response.json()).then(data => this.setState({\n      discapacidades: data\n    }));\n  }\n\n  getEstadosCiviles() {\n    fetch('http://localhost/FichaWeb/app/controller/estadoCivil/read.php').then(response => response.json()).then(data => this.setState({\n      estadosCiviles: data\n    }));\n  }\n\n  getTipoDocumento() {\n    fetch('http://localhost/FichaWeb/app/controller/tipoDocumento/read.php').then(response => response.json()).then(data => this.setState({\n      tiposDocumentos: data\n    }));\n  }\n\n  render() {\n    const nacionalidades = this.state.nacionalidades;\n    const discapacidades = this.state.discapacidades;\n    const estadosCiviles = this.state.estadosCiviles;\n    const tiposDocumentos = this.state.tiposDocumentos;\n    const fichaPersona = this.state.fichaPersona;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n\n    function handleChanges(value) {\n      console.log(\"se ha seleccionado \".concat(value));\n    }\n\n    return React.createElement(Layout, {\n      style: {\n        width: '75%',\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Nombres\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: fichaPersona.nombre_per,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Apellido Paterno\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: fichaPersona.apellido_pat_per,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Apellido Materno\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: fichaPersona.apellido_mat_per,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"G\\xE9nero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, getFieldDecorator('genero', {\n      initialValue: fichaPersona.sexo_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione su gÃ©nero.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione su sexo\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"M\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Masculino\"), React.createElement(Option, {\n      value: \"F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Femenino\")))), React.createElement(Form.Item, {\n      label: \"Estado Civil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, getFieldDecorator('estadoCivil', {\n      initialValue: fichaPersona.id_est_civil,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione su estado civil.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione su estado civil\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, estadosCiviles.map(estadoCivil => React.createElement(Option, {\n      value: estadoCivil.id_est_civil,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, estadoCivil.desc_est_civil))))), React.createElement(Form.Item, {\n      label: \"Discapacidad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, getFieldDecorator('discapacidad', {\n      initialValue: fichaPersona.IdAdm_Discapacidad = 0 ? 1 : fichaPersona.IdAdm_Discapacidad,\n      rules: [{\n        required: true,\n        message: 'En caso cuente con una discapacidad seleccione una.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione en caso tenga alguna discapacidad\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, discapacidades.map(discapacidad => React.createElement(Option, {\n      value: discapacidad.IdAdm_Discapacidad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, discapacidad.Descripcion))))), React.createElement(Form.Item, {\n      label: \"Tipo de documento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, getFieldDecorator('documento', {\n      initialValue: fichaPersona.id_tipo_doc,\n      rules: [{\n        required: true,\n        message: 'Seleccione el tipo de documento.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"DNI\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, tiposDocumentos.map(tipoDocumento => React.createElement(Option, {\n      value: tipoDocumento.id_tipo_doc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, tipoDocumento.desc_tipo_doc))))), React.createElement(Form.Item, {\n      label: \"Nro. de Documento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: fichaPersona.nro_doc_per,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: fichaPersona.email_per,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Celular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: fichaPersona.celular_per,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Tel\\xE9fono\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Input, {\n      value: fichaPersona.telefono_per,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Button.Group, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Siguiente\", React.createElement(Icon, {\n      type: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Form.create()(Paso1);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\Paso1\\Paso1.jsx"],"names":["React","Form","Input","Button","Select","Icon","Layout","Option","Footer","Paso1","Component","constructor","props","state","paso","idiomas","discapacidades","estadosCiviles","tiposDocumentos","fichaPersona","componentDidMount","getFichaPersona","getIdiomas","getDiscapacidades","getEstadosCiviles","getTipoDocumento","fetch","then","response","json","data","setState","nacionalidades","render","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","handleChanges","value","console","log","width","background","handleSubmit","nombre_per","apellido_pat_per","apellido_mat_per","initialValue","sexo_per","rules","required","message","id_est_civil","map","estadoCivil","desc_est_civil","IdAdm_Discapacidad","discapacidad","Descripcion","id_tipo_doc","tipoDocumento","desc_tipo_doc","nro_doc_per","email_per","celular_per","telefono_per","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Form, Input, Button, Select, Icon} from 'antd';\nimport {Layout} from \"antd\";\n\nconst {Option} = Select;\nconst {Footer} = Layout;\n\nclass Paso1 extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            paso: 1,\n            idiomas: [],\n            discapacidades: [],\n            estadosCiviles: [],\n            tiposDocumentos: [],\n            // fichaPersona: {\n            //     nombre_per: '',\n            //     apellido_pat_per: '',\n            //     apellido_mat_per: '',\n            //     sexo_per: '',\n            //     id_est_civil: '',\n            //     id_tipo_doc: '',\n            //     nro_doc_per: '',\n            //     telefono_per: '',\n            //     celular_per: '',\n            // },\n            fichaPersona: [],\n        };\n    }\n\n    componentDidMount() {\n        this.getFichaPersona();\n        this.getIdiomas();\n        this.getDiscapacidades();\n        this.getEstadosCiviles();\n        this.getTipoDocumento();\n    }\n\n    getFichaPersona() {\n        fetch('http://localhost/FichaWeb/app/controller/fichaPersona/read.php')\n            .then(response => response.json())\n            .then(data => this.setState({fichaPersona: data}))\n    }\n\n    getIdiomas() {\n        fetch('http://localhost/FichaWeb/app/controller/idioma/read.php')\n            .then(response => response.json())\n            .then(data => this.setState({nacionalidades: data}));\n    }\n\n    getDiscapacidades() {\n        fetch('http://localhost/FichaWeb/app/controller/discapacidad/read.php')\n            .then(response => response.json())\n            .then(data => this.setState({discapacidades: data}))\n    }\n\n    getEstadosCiviles() {\n        fetch('http://localhost/FichaWeb/app/controller/estadoCivil/read.php')\n            .then(response => response.json())\n            .then(data => this.setState({estadosCiviles: data}))\n    }\n\n    getTipoDocumento() {\n        fetch('http://localhost/FichaWeb/app/controller/tipoDocumento/read.php')\n            .then(response => response.json())\n            .then(data => this.setState({tiposDocumentos: data}))\n    }\n\n    render() {\n\n        const {nacionalidades} = this.state;\n        const {discapacidades} = this.state;\n        const {estadosCiviles} = this.state;\n        const {tiposDocumentos} = this.state;\n        const {fichaPersona} = this.state;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: {span: 24},\n                sm: {span: 8},\n            },\n            wrapperCol: {\n                xs: {span: 24},\n                sm: {span: 16},\n            },\n        };\n\n        const {getFieldDecorator} = this.props.form;\n\n        function handleChanges(value) {\n            console.log(`se ha seleccionado ${value}`);\n        }\n\n        return (\n\n            <Layout style={{width: '75%', background: \"white\"}}>\n                <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                    <Form.Item label=\"Nombres\">\n                        {/*{getFieldDecorator('nombres', {*/}\n                        {/*    rules: [*/}\n                        {/*        {*/}\n                        {/*            required: true,*/}\n                        {/*            message: 'Por favor ingrese sus nombres',*/}\n                        {/*        },*/}\n                        {/*    ],*/}\n                        {/*})(<Input defaultValue={fichaPersona.nombre_per} />)}*/}\n                        <Input value={fichaPersona.nombre_per}/>\n                    </Form.Item>\n                    <Form.Item label=\"Apellido Paterno\">\n                        {/*{getFieldDecorator('paterno', {*/}\n                        {/*    rules: [*/}\n                        {/*        {*/}\n                        {/*            required: true,*/}\n                        {/*            message: 'Por favor ingrese su apellido paterno',*/}\n                        {/*        },*/}\n                        {/*    ],*/}\n                        {/*})(<Input defaultValue={fichaPersona.apellido_pat_per}/>)}*/}\n                        <Input value={fichaPersona.apellido_pat_per}/>\n                    </Form.Item>\n                    <Form.Item label=\"Apellido Materno\">\n                        {/*{getFieldDecorator('materno', {*/}\n                        {/*    rules: [*/}\n                        {/*        {*/}\n                        {/*            required: true,*/}\n                        {/*            message: 'Por favor ingrese su apellido materno',*/}\n                        {/*        },*/}\n                        {/*    ],*/}\n                        {/*})(<Input/>)}*/}\n                        <Input value={fichaPersona.apellido_mat_per}/>\n                    </Form.Item>\n\n                    <Form.Item label=\"GÃ©nero\">\n                        {getFieldDecorator('genero', {\n                            initialValue: fichaPersona.sexo_per,\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Por favor seleccione su gÃ©nero.',\n                                },\n                            ],\n                        })(\n                            <Select placeholder={\"Seleccione su sexo\"} onChange={handleChanges}>\n                                <Option value=\"M\">Masculino</Option>\n                                <Option value=\"F\">Femenino</Option>\n                            </Select>)}\n                    </Form.Item>\n\n                    <Form.Item label=\"Estado Civil\">\n                        {getFieldDecorator('estadoCivil', {\n                            initialValue: fichaPersona.id_est_civil,\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Por favor seleccione su estado civil.',\n                                },\n                            ],\n                        })(\n                            <Select placeholder={\"Seleccione su estado civil\"} onChange={handleChanges}>\n                                {\n                                    estadosCiviles.map(estadoCivil =>\n                                        <Option value={estadoCivil.id_est_civil}>{estadoCivil.desc_est_civil}</Option>\n                                    )\n                                }\n                            </Select>)}\n                    </Form.Item>\n                    <Form.Item label=\"Discapacidad\">\n                        {getFieldDecorator('discapacidad', {\n                            initialValue: fichaPersona.IdAdm_Discapacidad = 0 ? 1 : fichaPersona.IdAdm_Discapacidad,\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'En caso cuente con una discapacidad seleccione una.',\n                                },\n                            ],\n                        })(\n                            <Select placeholder={\"Seleccione en caso tenga alguna discapacidad\"}\n                                    onChange={handleChanges}>\n                                {discapacidades.map(discapacidad =>\n                                    <Option value={discapacidad.IdAdm_Discapacidad}>{discapacidad.Descripcion}</Option>\n                                )}\n                            </Select>)}\n                    </Form.Item>\n                    <Form.Item label=\"Tipo de documento\">\n                        {getFieldDecorator('documento', {\n                            initialValue: fichaPersona.id_tipo_doc,\n                            rules: [\n                                {\n                                    required: true,\n                                    message: 'Seleccione el tipo de documento.',\n                                },\n                            ],\n                        })(\n                            <Select placeholder={\"DNI\"} onChange={handleChanges}>\n                                {tiposDocumentos.map(tipoDocumento =>\n                                    <Option value={tipoDocumento.id_tipo_doc}>{tipoDocumento.desc_tipo_doc}</Option>\n                                )}\n                            </Select>)}\n                    </Form.Item>\n                    <Form.Item label=\"Nro. de Documento\">\n                        {/*{getFieldDecorator('dni', {*/}\n                        {/*    rules: [*/}\n                        {/*        {*/}\n                        {/*            required: true,*/}\n                        {/*            message: 'Por favor ingrese su DNI',*/}\n                        {/*        },*/}\n                        {/*    ],*/}\n                        {/*})(<Input/>)}*/}\n                        <Input value={fichaPersona.nro_doc_per}/>\n                    </Form.Item>\n\n                    <Form.Item label=\"E-mail\">\n                        {/*{getFieldDecorator('email', {*/}\n                        {/*    rules: [*/}\n                        {/*        {*/}\n                        {/*            required: true,*/}\n                        {/*            message: 'Por favor ingrese eu E-mail',*/}\n                        {/*        },*/}\n                        {/*    ],*/}\n                        {/*})(<Input/>)}*/}\n                        <Input value={fichaPersona.email_per}/>\n                    </Form.Item>\n\n\n                    <Form.Item label=\"Celular\">\n                        {/*{getFieldDecorator('celular', {*/}\n                        {/*    rules: [*/}\n                        {/*        {*/}\n                        {/*            required: true,*/}\n                        {/*            message: 'Por favor ingrese su nÃºmero de celular',*/}\n                        {/*        },*/}\n                        {/*    ],*/}\n                        {/*})(<Input/>)}*/}\n                        <Input value={fichaPersona.celular_per}/>\n                    </Form.Item>\n                    <Form.Item label=\"TelÃ©fono\">\n                        {/*{getFieldDecorator('telefono', {*/}\n                        {/*    rules: [*/}\n                        {/*        {*/}\n                        {/*            required: true,*/}\n                        {/*            message: 'Por favor ingrese su nÃºmero de telÃ©fono',*/}\n                        {/*        },*/}\n                        {/*    ],*/}\n                        {/*})(<Input/>)}*/}\n                        <Input value={fichaPersona.telefono_per}/>\n                    </Form.Item>\n                </Form>\n                <Footer>\n                    <Button.Group size='large'>\n                        <Button type=\"primary\">\n                            Siguiente\n                            <Icon type=\"right\"/>\n                        </Button>\n                    </Button.Group>\n                </Footer>\n\n            </Layout>\n        )\n    }\n}\n\nexport default Form.create()(Paso1);"]},"metadata":{},"sourceType":"module"}