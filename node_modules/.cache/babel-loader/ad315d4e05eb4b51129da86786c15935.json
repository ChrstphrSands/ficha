{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\components\\\\LugarResidenciaActual.jsx\";\nimport React from \"react\";\nimport { Form, Input, Select, Layout } from \"antd\";\nconst TextArea = Input.TextArea;\nconst Option = Select.Option;\n\nclass LugarResidenciaActual extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.siguiente = e => {\n      e.preventDefault();\n      this.props.siguiente();\n    };\n\n    this.regresar = e => {\n      e.preventDefault();\n      this.props.regresar();\n    };\n\n    this.state = {\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      dependencias: []\n    };\n  }\n\n  componentDidMount() {\n    this.getCiudades();\n    this.getProvincias();\n    this.getDistritos();\n    this.getDependencias();\n  }\n\n  getCiudades() {\n    fetch(\"http://localhost/FichaWeb/app/controller/ciudad/read.php/?idPais=9589\").then(response => response.json()).then(data => this.setState({\n      ciudades: data\n    }));\n  }\n\n  getProvincias() {\n    fetch(\"http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919\").then(response => response.json()).then(data => this.setState({\n      provincias: data\n    }));\n  }\n\n  getDistritos() {\n    fetch(\"http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301\").then(response => response.json()).then(data => this.setState({\n      distritos: data\n    }));\n  }\n\n  getDependencias() {\n    fetch(\"http://localhost/FichaWeb/app/controller/dependenciaVivienda/read.php\").then(response => response.json()).then(data => this.setState({\n      dependencias: data\n    }));\n  }\n\n  render() {\n    const _this$state = this.state,\n          ciudades = _this$state.ciudades,\n          provincias = _this$state.provincias,\n          distritos = _this$state.distritos,\n          dependencias = _this$state.dependencias; // const { provincias } = this.state;\n    // const { distritos } = this.state;\n\n    const _this$props = this.props,\n          ficha = _this$props.ficha,\n          handleChangeInput = _this$props.handleChangeInput,\n          handleChangeSelect = _this$props.handleChangeSelect;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Layout, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, getFieldDecorator(\"ciudad\", {\n      initialValue: ficha.id_res_ciudad_per === \"\" || ficha.id_res_ciudad_per == null ? \"2919\" : ficha.id_res_ciudad_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la ciudad.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione en caso tenga alguna discapacidad\",\n      onChange: handleChangeSelect(\"id_res_ciudad_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, getFieldDecorator(\"provincia\", {\n      initialValue: ficha.id_res_provincia_per === \"\" || ficha.id_res_provincia_per == null ? \"2301\" : ficha.id_res_provincia_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la provincia.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Provincia\",\n      onChange: handleChangeSelect(\"id_res_provincia_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, provincia.descripcion))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, getFieldDecorator(\"distrito\", {\n      initialValue: ficha.id_res_distrito_per === \"\" || ficha.id_res_distrito_per == null ? \"230101\" : ficha.id_res_distrito_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione el distrito.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Distrito\",\n      onChange: handleChangeSelect(\"id_res_distrito_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, distritos.map(distrito => React.createElement(Option, {\n      value: distrito.CodDist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, distrito.descripcion))))), React.createElement(Form.Item, {\n      label: \"Direcci\\xF3n de Domicilio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, getFieldDecorator(\"direccionDomicilio\", {\n      initialValue: ficha.res_direccion_per,\n      rules: [{\n        required: true,\n        message: \"Por registre su dirección.\"\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      onChange: handleChangeInput(\"res_direccion_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Referencia de Domicilio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, getFieldDecorator(\"referenciaDomicilio\", {\n      initialValue: ficha.res_referencia_per,\n      rules: [{\n        required: true,\n        message: \"Por favor registre la referencia de su domicilio.\"\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      onChange: handleChangeInput(\"res_referencia_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Tel\\xE9fono de Referencia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, getFieldDecorator(\"telefonoReferencia\", {\n      initialValue: ficha.res_telefono_per,\n      rules: [{\n        required: true,\n        message: \"Por favor ingrese un teléfono de referencia.\"\n      }]\n    })(React.createElement(Input, {\n      onChange: handleChangeInput(\"res_telefono_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Vive en:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, getFieldDecorator(\"dependencia\", {\n      initialValue: ficha.id_dependencia_vivienda === \"\" || ficha.id_dependencia_vivienda == null ? \"1\" : ficha.id_dependencia_vivienda,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione una dependencia.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione:\",\n      onChange: handleChangeSelect(\"id_dependencia_vivienda\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, dependencias.map(dependencia => React.createElement(Option, {\n      value: dependencia.id_dependencia_vivienda,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, dependencia.descripcion)))))));\n  }\n\n}\n\nexport default Form.create()(LugarResidenciaActual);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\components\\LugarResidenciaActual.jsx"],"names":["React","Form","Input","Select","Layout","TextArea","Option","LugarResidenciaActual","Component","constructor","props","siguiente","e","preventDefault","regresar","state","ciudades","provincias","distritos","dependencias","componentDidMount","getCiudades","getProvincias","getDistritos","getDependencias","fetch","then","response","json","data","setState","render","ficha","handleChangeInput","handleChangeSelect","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","background","initialValue","id_res_ciudad_per","rules","required","message","map","ciudad","CodCiudad","descripcion","id_res_provincia_per","provincia","CodProv","id_res_distrito_per","distrito","CodDist","res_direccion_per","res_referencia_per","res_telefono_per","id_dependencia_vivienda","dependencia","create"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,MAA9B,QAA4C,MAA5C;MAEQC,Q,GAAaH,K,CAAbG,Q;MACAC,M,GAAWH,M,CAAXG,M;;AAER,MAAMC,qBAAN,SAAoCP,KAAK,CAACQ,SAA1C,CAAoD;AAWlDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAVnBC,SAUmB,GAVPC,CAAC,IAAI;AACfA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,KAAL,CAAWC,SAAX;AACD,KAOkB;;AAAA,SALnBG,QAKmB,GALRF,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,KAAL,CAAWI,QAAX;AACD,KAEkB;;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,YAAY,EAAE;AAJH,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,WAAL;AACA,SAAKC,aAAL;AACA,SAAKC,YAAL;AACA,SAAKC,eAAL;AACD;;AAEDH,EAAAA,WAAW,GAAG;AACZI,IAAAA,KAAK,CACH,uEADG,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEd,MAAAA,QAAQ,EAAEa;AAAZ,KAAd,CAJhB;AAKD;;AAEDP,EAAAA,aAAa,GAAG;AACdG,IAAAA,KAAK,CACH,4EADG,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEb,MAAAA,UAAU,EAAEY;AAAd,KAAd,CAJhB;AAKD;;AAEDN,EAAAA,YAAY,GAAG;AACbE,IAAAA,KAAK,CACH,wGADG,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEZ,MAAAA,SAAS,EAAEW;AAAb,KAAd,CAJhB;AAKD;;AAEDL,EAAAA,eAAe,GAAG;AAChBC,IAAAA,KAAK,CACH,uEADG,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEX,MAAAA,YAAY,EAAEU;AAAhB,KAAd,CAJhB;AAKD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBACmD,KAAKhB,KADxD;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,UADX,eACWA,UADX;AAAA,UACuBC,SADvB,eACuBA,SADvB;AAAA,UACkCC,YADlC,eACkCA,YADlC,EAEP;AACA;;AAHO,wBAIkD,KAAKT,KAJvD;AAAA,UAICsB,KAJD,eAICA,KAJD;AAAA,UAIQC,iBAJR,eAIQA,iBAJR;AAAA,UAI2BC,kBAJ3B,eAI2BA,kBAJ3B;AAMP,UAAMC,cAAc,GAAG;AACrBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADI;AAERC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFI,OADW;AAKrBE,MAAAA,UAAU,EAAE;AACVH,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADM;AAEVC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFM;AALS,KAAvB;AANO,UAiBCG,iBAjBD,GAiBuB,KAAK/B,KAAL,CAAWgC,IAjBlC,CAiBCD,iBAjBD;AAmBP,WACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEE,QAAAA,UAAU,EAAE;AAAd,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,oBAAUR,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,iBAAiB,CAAC,QAAD,EAAW;AAC3BG,MAAAA,YAAY,EACVZ,KAAK,CAACa,iBAAN,KAA4B,EAA5B,IAAkCb,KAAK,CAACa,iBAAN,IAA2B,IAA7D,GACI,MADJ,GAEIb,KAAK,CAACa,iBAJe;AAK3BC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AALoB,KAAX,CAAjB,CAYC,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,8CADf;AAEE,MAAA,QAAQ,EAAEd,kBAAkB,CAAC,mBAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGlB,QAAQ,CAACiC,GAAT,CAAaC,MAAM,IAClB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCD,MAAM,CAACE,WAAzC,CADD,CAJH,CAZD,CADH,CADF,EAwBE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,iBAAiB,CAAC,WAAD,EAAc;AAC9BG,MAAAA,YAAY,EACVZ,KAAK,CAACqB,oBAAN,KAA+B,EAA/B,IACArB,KAAK,CAACqB,oBAAN,IAA8B,IAD9B,GAEI,MAFJ,GAGIrB,KAAK,CAACqB,oBALkB;AAM9BP,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AANuB,KAAd,CAAjB,CAaC,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,WADf;AAEE,MAAA,QAAQ,EAAEd,kBAAkB,CAAC,sBAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGjB,UAAU,CAACgC,GAAX,CAAeK,SAAS,IACvB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,SAAS,CAACC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,SAAS,CAACF,WADb,CADD,CAJH,CAbD,CADH,CAxBF,EAkDE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,iBAAiB,CAAC,UAAD,EAAa;AAC7BG,MAAAA,YAAY,EACVZ,KAAK,CAACwB,mBAAN,KAA8B,EAA9B,IACAxB,KAAK,CAACwB,mBAAN,IAA6B,IAD7B,GAEI,QAFJ,GAGIxB,KAAK,CAACwB,mBALiB;AAM7BV,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AANsB,KAAb,CAAjB,CAaC,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,UADf;AAEE,MAAA,QAAQ,EAAEd,kBAAkB,CAAC,qBAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGhB,SAAS,CAAC+B,GAAV,CAAcQ,QAAQ,IACrB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,QAAQ,CAACC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,QAAQ,CAACL,WADZ,CADD,CAJH,CAbD,CADH,CAlDF,EA6EE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,iBAAiB,CAAC,oBAAD,EAAuB;AACvCG,MAAAA,YAAY,EAAEZ,KAAK,CAAC2B,iBADmB;AAEvCb,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFgC,KAAvB,CAAjB,CASC,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,CADR;AAEE,MAAA,QAAQ,EAAEf,iBAAiB,CAAC,mBAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATD,CADH,CA7EF,EA8FE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,yBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,iBAAiB,CAAC,qBAAD,EAAwB;AACxCG,MAAAA,YAAY,EAAEZ,KAAK,CAAC4B,kBADoB;AAExCd,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFiC,KAAxB,CAAjB,CASC,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,CADR;AAEE,MAAA,QAAQ,EAAEf,iBAAiB,CAAC,oBAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATD,CADH,CA9FF,EA+GE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,2BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,iBAAiB,CAAC,oBAAD,EAAuB;AACvCG,MAAAA,YAAY,EAAEZ,KAAK,CAAC6B,gBADmB;AAEvCf,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AAFgC,KAAvB,CAAjB,CAQE,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAEf,iBAAiB,CAAC,kBAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADH,CA/GF,EA2HE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,iBAAiB,CAAC,aAAD,EAAgB;AAChCG,MAAAA,YAAY,EACVZ,KAAK,CAAC8B,uBAAN,KAAkC,EAAlC,IACA9B,KAAK,CAAC8B,uBAAN,IAAiC,IADjC,GAEI,GAFJ,GAGI9B,KAAK,CAAC8B,uBALoB;AAMhChB,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AANyB,KAAhB,CAAjB,CAaC,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,aADf;AAEE,MAAA,QAAQ,EAAEd,kBAAkB,CAAC,yBAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGf,YAAY,CAAC8B,GAAb,CAAiBc,WAAW,IAC3B,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,WAAW,CAACD,uBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,WAAW,CAACX,WADf,CADD,CAJH,CAbD,CADH,CA3HF,CADF,CADF;AA0JD;;AA1OiD;;AA6OpD,eAAenD,IAAI,CAAC+D,MAAL,GAAczD,qBAAd,CAAf","sourcesContent":["import React from \"react\";\nimport { Form, Input, Select, Layout } from \"antd\";\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nclass LugarResidenciaActual extends React.Component {\n  siguiente = e => {\n    e.preventDefault();\n    this.props.siguiente();\n  };\n\n  regresar = e => {\n    e.preventDefault();\n    this.props.regresar();\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      dependencias: []\n    };\n  }\n\n  componentDidMount() {\n    this.getCiudades();\n    this.getProvincias();\n    this.getDistritos();\n    this.getDependencias();\n  }\n\n  getCiudades() {\n    fetch(\n      \"http://localhost/FichaWeb/app/controller/ciudad/read.php/?idPais=9589\"\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ ciudades: data }));\n  }\n\n  getProvincias() {\n    fetch(\n      \"http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919\"\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ provincias: data }));\n  }\n\n  getDistritos() {\n    fetch(\n      \"http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301\"\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ distritos: data }));\n  }\n\n  getDependencias() {\n    fetch(\n      \"http://localhost/FichaWeb/app/controller/dependenciaVivienda/read.php\"\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ dependencias: data }));\n  }\n\n  render() {\n    const { ciudades, provincias, distritos, dependencias } = this.state;\n    // const { provincias } = this.state;\n    // const { distritos } = this.state;\n    const { ficha, handleChangeInput, handleChangeSelect } = this.props;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Layout style={{ background: \"white\" }}>\n        <Form {...formItemLayout}>\n          <Form.Item label=\"Ciudad\">\n            {getFieldDecorator(\"ciudad\", {\n              initialValue:\n                ficha.id_res_ciudad_per === \"\" || ficha.id_res_ciudad_per == null\n                  ? \"2919\"\n                  : ficha.id_res_ciudad_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la ciudad.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione en caso tenga alguna discapacidad\"}\n                onChange={handleChangeSelect(\"id_res_ciudad_per\")}\n              >\n                {ciudades.map(ciudad => (\n                  <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Provincia\">\n            {getFieldDecorator(\"provincia\", {\n              initialValue:\n                ficha.id_res_provincia_per === \"\" ||\n                ficha.id_res_provincia_per == null\n                  ? \"2301\"\n                  : ficha.id_res_provincia_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la provincia.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Provincia\"}\n                onChange={handleChangeSelect(\"id_res_provincia_per\")}\n              >\n                {provincias.map(provincia => (\n                  <Option value={provincia.CodProv}>\n                    {provincia.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Distrito\">\n            {getFieldDecorator(\"distrito\", {\n              initialValue:\n                ficha.id_res_distrito_per === \"\" ||\n                ficha.id_res_distrito_per == null\n                  ? \"230101\"\n                  : ficha.id_res_distrito_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione el distrito.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Distrito\"}\n                onChange={handleChangeSelect(\"id_res_distrito_per\")}\n              >\n                {distritos.map(distrito => (\n                  <Option value={distrito.CodDist}>\n                    {distrito.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Dirección de Domicilio\">\n            {getFieldDecorator(\"direccionDomicilio\", {\n              initialValue: ficha.res_direccion_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por registre su dirección.\"\n                }\n              ]\n            })(\n              <TextArea\n                rows={4}\n                onChange={handleChangeInput(\"res_direccion_per\")}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Referencia de Domicilio\">\n            {getFieldDecorator(\"referenciaDomicilio\", {\n              initialValue: ficha.res_referencia_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor registre la referencia de su domicilio.\"\n                }\n              ]\n            })(\n              <TextArea\n                rows={4}\n                onChange={handleChangeInput(\"res_referencia_per\")}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Teléfono de Referencia\">\n            {getFieldDecorator(\"telefonoReferencia\", {\n              initialValue: ficha.res_telefono_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un teléfono de referencia.\"\n                }\n              ]\n            })(<Input onChange={handleChangeInput(\"res_telefono_per\")} />)}\n          </Form.Item>\n\n          <Form.Item label=\"Vive en:\">\n            {getFieldDecorator(\"dependencia\", {\n              initialValue:\n                ficha.id_dependencia_vivienda === \"\" ||\n                ficha.id_dependencia_vivienda == null\n                  ? \"1\"\n                  : ficha.id_dependencia_vivienda,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione una dependencia.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione:\"}\n                onChange={handleChangeSelect(\"id_dependencia_vivienda\")}\n              >\n                {dependencias.map(dependencia => (\n                  <Option value={dependencia.id_dependencia_vivienda}>\n                    {dependencia.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default Form.create()(LugarResidenciaActual);\n"]},"metadata":{},"sourceType":"module"}