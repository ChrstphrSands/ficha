{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\components\\\\LugarResidenciaActual.jsx\";\nimport React from \"react\";\nimport { Form, Input, Select, Layout } from \"antd\";\nconst TextArea = Input.TextArea;\nconst Option = Select.Option;\nconst initttt = {\n  mode: \"no-cors\",\n  headers: {\n    'Content-Type': 'application/json',\n    \"Accept\": 'application/json'\n  }\n};\nconst apiUrl = 'http://localhost/FichaDatos/FichaWeb/modules'; // const apiUrl = 'https://net.upt.edu.pe/FichaDatos/FichaWeb/modules';\n\nclass LugarResidenciaActual extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.siguiente = e => {\n      e.preventDefault();\n      this.props.siguiente();\n    };\n\n    this.regresar = e => {\n      e.preventDefault();\n      this.props.regresar();\n    };\n\n    this.getCiudades = async () => {\n      await fetch(\"\".concat(apiUrl, \"/Ciudad.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ, \"&idPais=9589\")).then(response => response.json()).then(data => this.setState({\n        ciudades: data\n      }));\n    };\n\n    this.getProvincias = async () => {\n      await fetch(\"\".concat(apiUrl, \"/Provincia.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ, \"&idCiudad=2919\")).then(response => response.json()).then(data => this.setState({\n        provincias: data\n      }));\n    };\n\n    this.getDistritos = async () => {\n      await fetch(\"\".concat(apiUrl, \"/Distrito.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ, \"&idPais=9589&idCiudad=2919&idProvincia=2301\")).then(response => response.json()).then(data => this.setState({\n        distritos: data\n      }));\n    };\n\n    this.getDependencias = async () => {\n      await fetch(\"\".concat(apiUrl, \"/DependenciaVivienda.php?p=read&session=\").concat(this.state.session, \"&CodUniv=\").concat(this.state.cod_univ)).then(response => response.json()).then(data => this.setState({\n        dependencias: data\n      }));\n    };\n\n    this.state = {\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      dependencias: [],\n      session: this.props.session,\n      cod_univ: this.props.cod_univ\n    };\n  }\n\n  componentDidMount() {// this.getCiudades();\n    // this.getProvincias();\n    // this.getDistritos();\n    // this.getDependencias();\n  }\n\n  render() {\n    // const { dependencias } = this.state;\n    // const { provincias } = this.state;\n    // const { distritos } = this.state;\n    const _this$props = this.props,\n          ficha = _this$props.ficha,\n          handleChangeInput = _this$props.handleChangeInput,\n          handleChangeSelect = _this$props.handleChangeSelect;\n    const _this$props2 = this.props,\n          ciudades = _this$props2.ciudades,\n          provincias = _this$props2.provincias,\n          distritos = _this$props2.distritos,\n          dependencias = _this$props2.dependencias;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Layout, {\n      style: {\n        background: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, getFieldDecorator(\"ciudad\", {\n      initialValue: ficha.id_res_ciudad_per === \"\" || ficha.id_res_ciudad_per == null ? 2919 : ficha.id_res_ciudad_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la ciudad.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione en caso tenga alguna discapacidad\",\n      onChange: handleChangeSelect(\"id_res_ciudad_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, getFieldDecorator(\"provincia\", {\n      initialValue: ficha.id_res_provincia_per === \"\" || ficha.id_res_provincia_per == null ? 2301 : ficha.id_res_provincia_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione la provincia.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Provincia\",\n      onChange: handleChangeSelect(\"id_res_provincia_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, provincia.descripcion))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, getFieldDecorator(\"distrito\", {\n      initialValue: ficha.id_res_distrito_per === \"\" || ficha.id_res_distrito_per == null ? 230101 : ficha.id_res_distrito_per,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione el distrito.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Distrito\",\n      onChange: handleChangeSelect(\"id_res_distrito_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, distritos.map(distrito => React.createElement(Option, {\n      value: distrito.CodDist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, distrito.descripcion))))), React.createElement(Form.Item, {\n      label: \"Direcci\\xF3n de Domicilio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, getFieldDecorator(\"direccionDomicilio\", {\n      initialValue: ficha.res_direccion_per,\n      rules: [{\n        required: true,\n        message: \"Por registre su dirección.\"\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      onChange: handleChangeInput(\"res_direccion_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Referencia de Domicilio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, getFieldDecorator(\"referenciaDomicilio\", {\n      initialValue: ficha.res_referencia_per,\n      rules: [{\n        required: true,\n        message: \"Por favor registre la referencia de su domicilio.\"\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      onChange: handleChangeInput(\"res_referencia_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Tel\\xE9fono de Referencia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, getFieldDecorator(\"telefonoReferencia\", {\n      initialValue: ficha.res_telefono_per,\n      rules: [{\n        required: true,\n        message: \"Por favor ingrese un teléfono de referencia.\"\n      }]\n    })(React.createElement(Input, {\n      onChange: handleChangeInput(\"res_telefono_per\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Vive en:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, getFieldDecorator(\"dependencia\", {\n      initialValue: ficha.id_dependencia_vivienda === \"\" || ficha.id_dependencia_vivienda == null ? 1 : ficha.id_dependencia_vivienda,\n      rules: [{\n        required: true,\n        message: \"Por favor seleccione una dependencia.\"\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione:\",\n      onChange: handleChangeSelect(\"id_dependencia_vivienda\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, dependencias.map(dependencia => React.createElement(Option, {\n      value: dependencia.id_dependencia_vivienda,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, dependencia.descripcion)))))));\n  }\n\n}\n\nexport default Form.create()(LugarResidenciaActual);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\components\\LugarResidenciaActual.jsx"],"names":["React","Form","Input","Select","Layout","TextArea","Option","initttt","mode","headers","apiUrl","LugarResidenciaActual","Component","constructor","props","siguiente","e","preventDefault","regresar","getCiudades","fetch","state","session","cod_univ","then","response","json","data","setState","ciudades","getProvincias","provincias","getDistritos","distritos","getDependencias","dependencias","componentDidMount","render","ficha","handleChangeInput","handleChangeSelect","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","background","initialValue","id_res_ciudad_per","rules","required","message","map","ciudad","CodCiudad","descripcion","id_res_provincia_per","provincia","CodProv","id_res_distrito_per","distrito","CodDist","res_direccion_per","res_referencia_per","res_telefono_per","id_dependencia_vivienda","dependencia","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Select, Layout } from \"antd\";\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst initttt = {\n  mode: \"no-cors\", headers: {\n    'Content-Type': 'application/json',\n    \"Accept\": 'application/json',\n  }\n};\n\nconst apiUrl = 'http://localhost/FichaDatos/FichaWeb/modules';\n// const apiUrl = 'https://net.upt.edu.pe/FichaDatos/FichaWeb/modules';\nclass LugarResidenciaActual extends React.Component {\n  siguiente = e => {\n    e.preventDefault();\n    this.props.siguiente();\n  };\n\n  regresar = e => {\n    e.preventDefault();\n    this.props.regresar();\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      dependencias: [],\n      session: this.props.session,\n      cod_univ: this.props.cod_univ\n    };\n  }\n\n  componentDidMount() {\n    // this.getCiudades();\n    // this.getProvincias();\n    // this.getDistritos();\n    // this.getDependencias();\n  }\n\n  getCiudades = async () => {\n    await fetch(\n      `${apiUrl}/Ciudad.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ ciudades: data }));\n  }\n\n  getProvincias = async () => {\n    await fetch(\n      `${apiUrl}/Provincia.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idCiudad=2919`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ provincias: data }));\n  }\n\n  getDistritos = async () => {\n    await fetch(\n      `${apiUrl}/Distrito.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}&idPais=9589&idCiudad=2919&idProvincia=2301`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ distritos: data }));\n  }\n\n  getDependencias = async () => {\n    await fetch(\n      `${apiUrl}/DependenciaVivienda.php?p=read&session=${this.state.session}&CodUniv=${this.state.cod_univ}`\n    )\n      .then(response => response.json())\n      .then(data => this.setState({ dependencias: data }));\n  }\n\n  render() {\n    // const { dependencias } = this.state;\n    // const { provincias } = this.state;\n    // const { distritos } = this.state;\n    const { ficha, handleChangeInput, handleChangeSelect } = this.props;\n    const {ciudades, provincias, distritos, dependencias} = this.props;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    };\n\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Layout style={{ background: \"white\" }}>\n        <Form {...formItemLayout}>\n          <Form.Item label=\"Ciudad\">\n            {getFieldDecorator(\"ciudad\", {\n              initialValue:\n                ficha.id_res_ciudad_per === \"\" ||\n                ficha.id_res_ciudad_per == null\n                  ? 2919\n                  : ficha.id_res_ciudad_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la ciudad.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione en caso tenga alguna discapacidad\"}\n                onChange={handleChangeSelect(\"id_res_ciudad_per\")}\n              >\n                {ciudades.map(ciudad => (\n                  <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Provincia\">\n            {getFieldDecorator(\"provincia\", {\n              initialValue:\n                ficha.id_res_provincia_per === \"\" ||\n                ficha.id_res_provincia_per == null\n                  ? 2301\n                  : ficha.id_res_provincia_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione la provincia.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Provincia\"}\n                onChange={handleChangeSelect(\"id_res_provincia_per\")}\n              >\n                {provincias.map(provincia => (\n                  <Option value={provincia.CodProv}>\n                    {provincia.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n          <Form.Item label=\"Distrito\">\n            {getFieldDecorator(\"distrito\", {\n              initialValue:\n                ficha.id_res_distrito_per === \"\" ||\n                ficha.id_res_distrito_per == null\n                  ? 230101\n                  : ficha.id_res_distrito_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione el distrito.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Distrito\"}\n                onChange={handleChangeSelect(\"id_res_distrito_per\")}\n              >\n                {distritos.map(distrito => (\n                  <Option value={distrito.CodDist}>\n                    {distrito.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Dirección de Domicilio\">\n            {getFieldDecorator(\"direccionDomicilio\", {\n              initialValue: ficha.res_direccion_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por registre su dirección.\"\n                }\n              ]\n            })(\n              <TextArea\n                rows={4}\n                onChange={handleChangeInput(\"res_direccion_per\")}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Referencia de Domicilio\">\n            {getFieldDecorator(\"referenciaDomicilio\", {\n              initialValue: ficha.res_referencia_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor registre la referencia de su domicilio.\"\n                }\n              ]\n            })(\n              <TextArea\n                rows={4}\n                onChange={handleChangeInput(\"res_referencia_per\")}\n              />\n            )}\n          </Form.Item>\n\n          <Form.Item label=\"Teléfono de Referencia\">\n            {getFieldDecorator(\"telefonoReferencia\", {\n              initialValue: ficha.res_telefono_per,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor ingrese un teléfono de referencia.\"\n                }\n              ]\n            })(<Input onChange={handleChangeInput(\"res_telefono_per\")} />)}\n          </Form.Item>\n\n          <Form.Item label=\"Vive en:\">\n            {getFieldDecorator(\"dependencia\", {\n              initialValue:\n                ficha.id_dependencia_vivienda === \"\" ||\n                ficha.id_dependencia_vivienda == null\n                  ? 1\n                  : ficha.id_dependencia_vivienda,\n              rules: [\n                {\n                  required: true,\n                  message: \"Por favor seleccione una dependencia.\"\n                }\n              ]\n            })(\n              <Select\n                placeholder={\"Seleccione:\"}\n                onChange={handleChangeSelect(\"id_dependencia_vivienda\")}\n              >\n                {dependencias.map(dependencia => (\n                  <Option value={dependencia.id_dependencia_vivienda}>\n                    {dependencia.descripcion}\n                  </Option>\n                ))}\n              </Select>\n            )}\n          </Form.Item>\n        </Form>\n      </Layout>\n    );\n  }\n}\n\nexport default Form.create()(LugarResidenciaActual);\n"]},"metadata":{},"sourceType":"module"}