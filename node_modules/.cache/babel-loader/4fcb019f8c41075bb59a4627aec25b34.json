{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\Paso3\\\\Paso3.jsx\";\nimport React from 'react';\nimport { Form, Input, Button, Select, DatePicker } from 'antd';\nconst TextArea = Input.TextArea;\nconst Option = Select.Option;\n\nclass Paso3 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nacionalidades: [],\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      fichaPersona: []\n    };\n  }\n\n  componentDidMount() {\n    this.getPaises();\n    this.getFichaPersona();\n    this.getCiudades();\n    this.getProvincias();\n    this.getDistritos();\n  }\n\n  getFichaPersona() {\n    fetch('http://localhost/FichaWeb/app/controller/fichaPersona/read.php').then(response => response.json()).then(data => this.setState({\n      fichaPersona: data\n    }));\n  }\n\n  getPaises() {\n    fetch('http://localhost/FichaWeb/app/controller/nacionalidad/read.php').then(response => response.json()).then(data => this.setState({\n      nacionalidades: data\n    }));\n  }\n\n  getCiudades() {\n    fetch('http://localhost/FichaWeb/app/controller/ciudad/read.php/?idPais=9589').then(response => response.json()).then(data => this.setState({\n      ciudades: data\n    }));\n  }\n\n  getProvincias() {\n    fetch('http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919').then(response => response.json()).then(data => this.setState({\n      provincias: data\n    }));\n  }\n\n  getDistritos() {\n    fetch('http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301').then(response => response.json()).then(data => this.setState({\n      distritos: data\n    }));\n  }\n\n  render() {\n    const nacionalidades = this.state.nacionalidades;\n    const ciudades = this.state.ciudades;\n    const provincias = this.state.provincias;\n    const distritos = this.state.distritos;\n    const fichaPersona = this.state.fichaPersona;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const config = {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: 'Por favor seleccione la fecha de su nacimiento  '\n      }]\n    };\n\n    function handleChanges(value) {\n      console.log(\"se ha seleccionado \".concat(value));\n    }\n\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      style: {\n        width: \"75%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, getFieldDecorator('ciudad', {\n      initialValue: fichaPersona.id_res_ciudad_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la ciudad.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione en caso tenga alguna discapacidad\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, getFieldDecorator('provincia', {\n      initialValue: fichaPersona.id_res_provincia_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la provincia.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Provincia\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, provincia.descripcion))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, getFieldDecorator('distrito', {\n      initialValue: fichaPersona.id_res_distrito_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione el distrito.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Distrito\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, distritos.map(distrito => React.createElement(Option, {\n      value: distrito.CodDist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, distrito.descripcion))))), React.createElement(Form.Item, {\n      label: \"Direcci\\xF3n de Domicilio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, getFieldDecorator('direccionDomicilio', {\n      initialValue: fichaPersona.res_direccion_per,\n      rules: [{\n        required: true,\n        message: 'Por registre su dirección.'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Referencia de Domicilio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, getFieldDecorator('referenciaDomicilio', {\n      initialValue: fichaPersona.res_referencia_per,\n      rules: [{\n        required: true,\n        message: 'Por favor registre la referencia de su domicilio.'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Tel\\xE9fono de Referencia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, getFieldDecorator('telefonoReferencia', {\n      initialValue: fichaPersona.res_telefono_per,\n      rules: [{\n        required: true,\n        message: 'Por favor ingrese un teléfono de referencia.'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Form.create()(Paso3);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\Paso3\\Paso3.jsx"],"names":["React","Form","Input","Button","Select","DatePicker","TextArea","Option","Paso3","Component","constructor","props","state","nacionalidades","ciudades","provincias","distritos","fichaPersona","componentDidMount","getPaises","getFichaPersona","getCiudades","getProvincias","getDistritos","fetch","then","response","json","data","setState","render","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","config","rules","type","required","message","handleChanges","value","console","log","width","initialValue","id_res_ciudad_per","map","ciudad","CodCiudad","descripcion","id_res_provincia_per","provincia","CodProv","id_res_distrito_per","distrito","CodDist","res_direccion_per","res_referencia_per","res_telefono_per","create"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Form, Input, Button, Select, DatePicker} from 'antd';\r\n\r\nconst {TextArea} = Input;\r\nconst {Option} = Select;\r\n\r\nclass Paso3 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nacionalidades: [],\r\n            ciudades: [],\r\n            provincias: [],\r\n            distritos: [],\r\n            fichaPersona: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPaises();\r\n        this.getFichaPersona();\r\n        this.getCiudades();\r\n        this.getProvincias();\r\n        this.getDistritos();\r\n    }\r\n\r\n    getFichaPersona() {\r\n        fetch('http://localhost/FichaWeb/app/controller/fichaPersona/read.php')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({fichaPersona: data}))\r\n    }\r\n\r\n    getPaises() {\r\n        fetch('http://localhost/FichaWeb/app/controller/nacionalidad/read.php')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({nacionalidades: data}));\r\n    }\r\n\r\n    getCiudades() {\r\n        fetch('http://localhost/FichaWeb/app/controller/ciudad/read.php/?idPais=9589')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ciudades: data}));\r\n    }\r\n\r\n    getProvincias() {\r\n        fetch('http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({provincias: data}));\r\n    }\r\n\r\n    getDistritos() {\r\n        fetch('http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({distritos: data}));\r\n    }\r\n\r\n    render() {\r\n\r\n        const {nacionalidades} = this.state;\r\n        const {ciudades} = this.state;\r\n        const {provincias} = this.state;\r\n        const {distritos} = this.state;\r\n        const {fichaPersona} = this.state;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: {span: 24},\r\n                sm: {span: 8},\r\n            },\r\n            wrapperCol: {\r\n                xs: {span: 24},\r\n                sm: {span: 16},\r\n            },\r\n        };\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n        const config = {\r\n            rules: [{type: 'object', required: true, message: 'Por favor seleccione la fecha de su nacimiento  '}],\r\n        };\r\n\r\n        function handleChanges(value) {\r\n            console.log(`se ha seleccionado ${value}`);\r\n        }\r\n\r\n        return (\r\n            <Form {...formItemLayout} style={{width: \"75%\"}}>\r\n                <Form.Item label=\"Ciudad\">\r\n                    {getFieldDecorator('ciudad', {\r\n                        initialValue: fichaPersona.id_res_ciudad_per,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Por favor seleccione la ciudad.',\r\n                            },\r\n                        ],\r\n                    })(\r\n                        <Select placeholder={\"Seleccione en caso tenga alguna discapacidad\"} onChange={handleChanges}>\r\n                            {ciudades.map(ciudad =>\r\n                                <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>\r\n                            )}\r\n                        </Select>)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Provincia\">\r\n                    {getFieldDecorator('provincia', {\r\n                        initialValue: fichaPersona.id_res_provincia_per,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Por favor seleccione la provincia.',\r\n                            },\r\n                        ],\r\n                    })(\r\n                        <Select placeholder={\"Provincia\"} onChange={handleChanges}>\r\n                            {provincias.map(provincia =>\r\n                                <Option value={provincia.CodProv}>{provincia.descripcion}</Option>\r\n                            )}\r\n                        </Select>)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Distrito\">\r\n                    {getFieldDecorator('distrito', {\r\n                        initialValue: fichaPersona.id_res_distrito_per,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Por favor seleccione el distrito.',\r\n                            },\r\n                        ],\r\n                    })(<Select placeholder={\"Distrito\"} onChange={handleChanges}>\r\n                        {distritos.map(distrito =>\r\n                            <Option value={distrito.CodDist}>{distrito.descripcion}</Option>\r\n                        )}\r\n                    </Select>)}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Dirección de Domicilio\">\r\n                    {getFieldDecorator('direccionDomicilio', {\r\n                        initialValue: fichaPersona.res_direccion_per,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Por registre su dirección.',\r\n                            },\r\n                        ],\r\n                    })(\r\n                        <TextArea rows={4}/>\r\n                    )}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Referencia de Domicilio\">\r\n                    {getFieldDecorator('referenciaDomicilio', {\r\n                        initialValue: fichaPersona.res_referencia_per,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Por favor registre la referencia de su domicilio.',\r\n                            },\r\n                        ],\r\n                    })(\r\n                        <TextArea rows={4}/>\r\n                    )}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Teléfono de Referencia\">\r\n                    {getFieldDecorator('telefonoReferencia', {\r\n                        initialValue: fichaPersona.res_telefono_per,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Por favor ingrese un teléfono de referencia.',\r\n                            },\r\n                        ],\r\n                    })(\r\n                        <Input/>\r\n                    )}\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Form.create()(Paso3);"]},"metadata":{},"sourceType":"module"}