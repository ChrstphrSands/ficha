{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\ficha\\\\src\\\\Paso2\\\\Paso2.jsx\";\nimport React from 'react';\nimport { Form, Input, Button, Select, DatePicker } from 'antd';\nimport moment from 'moment';\nconst Option = Select.Option;\nlet idPais = '';\n\nclass Paso2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nacionalidades: [],\n      ciudades: [],\n      provincias: [],\n      distritos: [],\n      fichaPersona: []\n    };\n  }\n\n  componentDidMount() {\n    this.getFichaPersona();\n    this.getPaises();\n    this.getCiudades();\n    this.getProvincias();\n    this.getDistritos();\n  }\n\n  getFichaPersona() {\n    fetch('http://localhost/FichaWeb/app/controller/fichaPersona/read.php').then(response => response.json()).then(data => this.setState({\n      fichaPersona: data\n    }));\n  }\n\n  getPaises() {\n    fetch('http://localhost/FichaWeb/app/controller/nacionalidad/read.php').then(response => response.json()).then(data => this.setState({\n      nacionalidades: data\n    }));\n  }\n\n  getCiudades() {\n    fetch(\"http://localhost/FichaWeb/app/controller/ciudad/read.php?idPais=9589\").then(response => response.json()).then(data => this.setState({\n      ciudades: data\n    }));\n  }\n\n  getProvincias() {\n    fetch('http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919').then(response => response.json()).then(data => this.setState({\n      provincias: data\n    }));\n  }\n\n  getDistritos() {\n    fetch('http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301').then(response => response.json()).then(data => this.setState({\n      distritos: data\n    }));\n  }\n\n  render() {\n    const nacionalidades = this.state.nacionalidades;\n    const ciudades = this.state.ciudades;\n    const fichaPersona = this.state.fichaPersona;\n    const provincias = this.state.provincias;\n    const distritos = this.state.distritos;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const dateFormat = 'DD/MM/YYYY';\n    const config = {\n      rules: [{\n        type: 'object',\n        required: true,\n        message: 'Por favor seleccione la fecha de su nacimiento'\n      }]\n    };\n\n    function handleChanges(value) {\n      console.log(\"se ha seleccionado \".concat(value));\n    }\n\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      style: {\n        width: \"75%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Fecha de Nacimiento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, getFieldDecorator('fechaNac', config)(React.createElement(DatePicker, {\n      defaultValue: moment(fichaPersona.fch_nacimiento_per, dateFormat),\n      format: dateFormat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Pa\\xEDs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, getFieldDecorator('pais', {\n      initialValue: fichaPersona.id_nac_pais_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione el país.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Perú\",\n      onChange: handleChanges,\n      showSearch: true,\n      optionFilterProp: \"children\",\n      filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, nacionalidades.map(nacionalidad => React.createElement(Option, {\n      value: nacionalidad.CodNac,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, nacionalidad.Descripcion))))), React.createElement(Form.Item, {\n      label: \"Ciudad\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, getFieldDecorator('ciudad', {\n      initialValue: fichaPersona.id_res_ciudad_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la ciudad.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Seleccione ciudad\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, ciudades.map(ciudad => React.createElement(Option, {\n      value: ciudad.CodCiudad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, ciudad.descripcion))))), React.createElement(Form.Item, {\n      label: \"Provincia\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, getFieldDecorator('provincia', {\n      initialValue: fichaPersona.id_res_provincia_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione la provincia.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Provincia\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, provincias.map(provincia => React.createElement(Option, {\n      value: provincia.CodProv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, provincia.descripcion))))), React.createElement(Form.Item, {\n      label: \"Distrito\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, getFieldDecorator('distrito', {\n      initialValue: fichaPersona.id_res_distrito_per,\n      rules: [{\n        required: true,\n        message: 'Por favor seleccione el distrito.'\n      }]\n    })(React.createElement(Select, {\n      placeholder: \"Distrito\",\n      onChange: handleChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, distritos.map(distrito => React.createElement(Option, {\n      value: distrito.CodDist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, distrito.descripcion))))));\n  }\n\n}\n\nexport default Form.create()(Paso2);","map":{"version":3,"sources":["D:\\Projects\\ficha\\src\\Paso2\\Paso2.jsx"],"names":["React","Form","Input","Button","Select","DatePicker","moment","Option","idPais","Paso2","Component","constructor","props","state","nacionalidades","ciudades","provincias","distritos","fichaPersona","componentDidMount","getFichaPersona","getPaises","getCiudades","getProvincias","getDistritos","fetch","then","response","json","data","setState","render","formItemLayout","labelCol","xs","span","sm","wrapperCol","getFieldDecorator","form","dateFormat","config","rules","type","required","message","handleChanges","value","console","log","width","fch_nacimiento_per","initialValue","id_nac_pais_per","input","option","children","toLowerCase","indexOf","map","nacionalidad","CodNac","Descripcion","id_res_ciudad_per","ciudad","CodCiudad","descripcion","id_res_provincia_per","provincia","CodProv","id_res_distrito_per","distrito","CodDist","create"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,UAArC,QAAsD,MAAtD;AACA,OAAOC,MAAP,MAAmB,QAAnB;MAEOC,M,GAAUH,M,CAAVG,M;AAEP,IAAIC,MAAM,GAAG,EAAb;;AAEA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,EADP;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,UAAU,EAAE,EAHH;AAITC,MAAAA,SAAS,EAAE,EAJF;AAKTC,MAAAA,YAAY,EAAE;AALL,KAAb;AAOH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,eAAL;AACA,SAAKC,SAAL;AACA,SAAKC,WAAL;AACA,SAAKC,aAAL;AACA,SAAKC,YAAL;AACH;;AAEDJ,EAAAA,eAAe,GAAG;AACdK,IAAAA,KAAK,CAAC,gEAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACZ,MAAAA,YAAY,EAAEW;AAAf,KAAd,CAFlB;AAGH;;AAEDR,EAAAA,SAAS,GAAG;AACRI,IAAAA,KAAK,CAAC,gEAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAChB,MAAAA,cAAc,EAAEe;AAAjB,KAAd,CAFlB;AAGH;;AAEDP,EAAAA,WAAW,GAAG;AACVG,IAAAA,KAAK,wEAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACf,MAAAA,QAAQ,EAAEc;AAAX,KAAd,CAFlB;AAGH;;AAEDN,EAAAA,aAAa,GAAG;AACZE,IAAAA,KAAK,CAAC,4EAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACd,MAAAA,UAAU,EAAEa;AAAb,KAAd,CAFlB;AAGH;;AAEDL,EAAAA,YAAY,GAAG;AACXC,IAAAA,KAAK,CAAC,wGAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACb,MAAAA,SAAS,EAAEY;AAAZ,KAAd,CAFlB;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UAEEjB,cAFF,GAEoB,KAAKD,KAFzB,CAEEC,cAFF;AAAA,UAGEC,QAHF,GAGc,KAAKF,KAHnB,CAGEE,QAHF;AAAA,UAIEG,YAJF,GAIkB,KAAKL,KAJvB,CAIEK,YAJF;AAAA,UAKEF,UALF,GAKgB,KAAKH,KALrB,CAKEG,UALF;AAAA,UAMEC,SANF,GAMe,KAAKJ,KANpB,CAMEI,SANF;AAQL,UAAMe,cAAc,GAAG;AACnBC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,EAAE,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SADE;AAENC,QAAAA,EAAE,EAAE;AAACD,UAAAA,IAAI,EAAE;AAAP;AAFE,OADS;AAKnBE,MAAAA,UAAU,EAAE;AACRH,QAAAA,EAAE,EAAE;AAACC,UAAAA,IAAI,EAAE;AAAP,SADI;AAERC,QAAAA,EAAE,EAAE;AAACD,UAAAA,IAAI,EAAE;AAAP;AAFI;AALO,KAAvB;AARK,UAmBEG,iBAnBF,GAmBuB,KAAK1B,KAAL,CAAW2B,IAnBlC,CAmBED,iBAnBF;AAoBL,UAAME,UAAU,GAAG,YAAnB;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,KAAK,EAAE,CAAC;AAACC,QAAAA,IAAI,EAAE,QAAP;AAAiBC,QAAAA,QAAQ,EAAE,IAA3B;AAAiCC,QAAAA,OAAO,EAAE;AAA1C,OAAD;AADI,KAAf;;AAIA,aAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,8BAAkCF,KAAlC;AACH;;AAED,WACI,oBAAC,IAAD,oBAAUf,cAAV;AAA0B,MAAA,KAAK,EAAE;AAACkB,QAAAA,KAAK,EAAE;AAAR,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKZ,iBAAiB,CAAC,UAAD,EAAaG,MAAb,CAAjB,CAEG,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAEnC,MAAM,CAACY,YAAY,CAACiC,kBAAd,EAAkCX,UAAlC,CAAhC;AACY,MAAA,MAAM,EAAEA,UADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADL,CADJ,EASI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,iBAAiB,CAAC,MAAD,EAAS;AACvBc,MAAAA,YAAY,EAAElC,YAAY,CAACmC,eADJ;AAEvBX,MAAAA,KAAK,EAAE,CACH;AACIE,QAAAA,QAAQ,EAAE,IADd;AAEIC,QAAAA,OAAO,EAAE;AAFb,OADG;AAFgB,KAAT,CAAjB,CASG,oBAAC,MAAD;AACI,MAAA,WAAW,EAAE,MADjB;AAEI,MAAA,QAAQ,EAAEC,aAFd;AAGI,MAAA,UAAU,EAAE,IAHhB;AAII,MAAA,gBAAgB,EAAE,UAJtB;AAKI,MAAA,YAAY,EAAE,CAACQ,KAAD,EAAQC,MAAR,KACVA,MAAM,CAAC3C,KAAP,CAAa4C,QAAb,CAAsBC,WAAtB,GAAoCC,OAApC,CAA4CJ,KAAK,CAACG,WAAN,EAA5C,KAAoE,CAN5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUQ3C,cAAc,CAAC6C,GAAf,CAAmBC,YAAY,IAC3B,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,YAAY,CAACC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCD,YAAY,CAACE,WAAlD,CADJ,CAVR,CATH,CADL,CATJ,EAmCI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKxB,iBAAiB,CAAC,QAAD,EAAW;AACzBc,MAAAA,YAAY,EAAElC,YAAY,CAAC6C,iBADF;AAEzBrB,MAAAA,KAAK,EAAE,CACH;AACIE,QAAAA,QAAQ,EAAE,IADd;AAEIC,QAAAA,OAAO,EAAE;AAFb,OADG;AAFkB,KAAX,CAAjB,CASG,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,mBAArB;AAA0C,MAAA,QAAQ,EAAEC,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ/B,QAAQ,CAAC4C,GAAT,CAAaK,MAAM,IACf,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCD,MAAM,CAACE,WAAzC,CADJ,CAFR,CATH,CADL,CAnCJ,EAoDI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK5B,iBAAiB,CAAC,WAAD,EAAc;AAC5Bc,MAAAA,YAAY,EAAElC,YAAY,CAACiD,oBADC;AAE5BzB,MAAAA,KAAK,EAAE,CACH;AACIE,QAAAA,QAAQ,EAAE,IADd;AAEIC,QAAAA,OAAO,EAAE;AAFb,OADG;AAFqB,KAAd,CAAjB,CASG,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,WAArB;AAAkC,MAAA,QAAQ,EAAEC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ9B,UAAU,CAAC2C,GAAX,CAAeS,SAAS,IACpB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,SAAS,CAACC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCD,SAAS,CAACF,WAA7C,CADJ,CAFR,CATH,CADL,CApDJ,EAsEI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK5B,iBAAiB,CAAC,UAAD,EAAa;AAC3Bc,MAAAA,YAAY,EAAElC,YAAY,CAACoD,mBADA;AAE3B5B,MAAAA,KAAK,EAAE,CACH;AACIE,QAAAA,QAAQ,EAAE,IADd;AAEIC,QAAAA,OAAO,EAAE;AAFb,OADG;AAFoB,KAAb,CAAjB,CASG,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,UAArB;AAAiC,MAAA,QAAQ,EAAEC,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ7B,SAAS,CAAC0C,GAAV,CAAcY,QAAQ,IAClB,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,QAAQ,CAACC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCD,QAAQ,CAACL,WAA3C,CADJ,CAFR,CATH,CADL,CAtEJ,CADJ;AA4FH;;AA7K+B;;AAiLpC,eAAejE,IAAI,CAACwE,MAAL,GAAchE,KAAd,CAAf","sourcesContent":["import React from 'react';\r\nimport {Form, Input, Button, Select, DatePicker} from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst {Option} = Select;\r\n\r\nlet idPais = '';\r\n\r\nclass Paso2 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nacionalidades: [],\r\n            ciudades: [],\r\n            provincias: [],\r\n            distritos: [],\r\n            fichaPersona: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFichaPersona();\r\n        this.getPaises();\r\n        this.getCiudades();\r\n        this.getProvincias();\r\n        this.getDistritos();\r\n    }\r\n\r\n    getFichaPersona() {\r\n        fetch('http://localhost/FichaWeb/app/controller/fichaPersona/read.php')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({fichaPersona: data}))\r\n    }\r\n\r\n    getPaises() {\r\n        fetch('http://localhost/FichaWeb/app/controller/nacionalidad/read.php')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({nacionalidades: data}));\r\n    }\r\n\r\n    getCiudades() {\r\n        fetch(`http://localhost/FichaWeb/app/controller/ciudad/read.php?idPais=9589`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ciudades: data}));\r\n    }\r\n\r\n    getProvincias() {\r\n        fetch('http://localhost/FichaWeb/app/controller/provincia/read.php/?idCiudad=2919')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({provincias: data}));\r\n    }\r\n\r\n    getDistritos() {\r\n        fetch('http://localhost/FichaWeb/app/controller/distrito/read.php/?idPais=9589&idCiudad=2919&idProvincia=2301')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({distritos: data}));\r\n    }\r\n\r\n    render() {\r\n\r\n        const {nacionalidades} = this.state;\r\n        const {ciudades} = this.state;\r\n        const {fichaPersona} = this.state;\r\n        const {provincias} = this.state;\r\n        const {distritos} = this.state;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: {span: 24},\r\n                sm: {span: 8},\r\n            },\r\n            wrapperCol: {\r\n                xs: {span: 24},\r\n                sm: {span: 16},\r\n            },\r\n        };\r\n\r\n        const {getFieldDecorator} = this.props.form;\r\n        const dateFormat = 'DD/MM/YYYY';\r\n        const config = {\r\n            rules: [{type: 'object', required: true, message: 'Por favor seleccione la fecha de su nacimiento'}],\r\n        };\r\n\r\n        function handleChanges(value) {\r\n            console.log(`se ha seleccionado ${value}`);\r\n        }\r\n\r\n        return (\r\n            <Form {...formItemLayout} style={{width: \"75%\"}}>\r\n                <Form.Item label=\"Fecha de Nacimiento\">\r\n                    {getFieldDecorator('fechaNac', config)\r\n                    (\r\n                        <DatePicker defaultValue={moment(fichaPersona.fch_nacimiento_per, dateFormat)}\r\n                                    format={dateFormat}/>\r\n                    )}\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"País\">\r\n                    {getFieldDecorator('pais', {\r\n                        initialValue: fichaPersona.id_nac_pais_per,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Por favor seleccione el país.',\r\n                            },\r\n                        ],\r\n                    })(\r\n                        <Select\r\n                            placeholder={\"Perú\"}\r\n                            onChange={handleChanges}\r\n                            showSearch={true}\r\n                            optionFilterProp={\"children\"}\r\n                            filterOption={(input, option) =>\r\n                                option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                            {\r\n                                nacionalidades.map(nacionalidad =>\r\n                                    <Option value={nacionalidad.CodNac}>{nacionalidad.Descripcion}</Option>\r\n                                )\r\n                            }\r\n                        </Select>)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Ciudad\">\r\n                    {getFieldDecorator('ciudad', {\r\n                        initialValue: fichaPersona.id_res_ciudad_per,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Por favor seleccione la ciudad.',\r\n                            },\r\n                        ],\r\n                    })(\r\n                        <Select placeholder={\"Seleccione ciudad\"} onChange={handleChanges}>\r\n                            {\r\n                                ciudades.map(ciudad =>\r\n                                    <Option value={ciudad.CodCiudad}>{ciudad.descripcion}</Option>)\r\n                            }\r\n                        </Select>)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Provincia\">\r\n                    {getFieldDecorator('provincia', {\r\n                        initialValue: fichaPersona.id_res_provincia_per,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Por favor seleccione la provincia.',\r\n                            },\r\n                        ],\r\n                    })(\r\n                        <Select placeholder={\"Provincia\"} onChange={handleChanges}>\r\n                            {\r\n                                provincias.map(provincia =>\r\n                                    <Option value={provincia.CodProv}>{provincia.descripcion}</Option>\r\n                                )\r\n                            }\r\n                        </Select>)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Distrito\">\r\n                    {getFieldDecorator('distrito', {\r\n                        initialValue: fichaPersona.id_res_distrito_per,\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: 'Por favor seleccione el distrito.',\r\n                            },\r\n                        ],\r\n                    })(\r\n                        <Select placeholder={\"Distrito\"} onChange={handleChanges}>\r\n                            {\r\n                                distritos.map(distrito =>\r\n                                    <Option value={distrito.CodDist}>{distrito.descripcion}</Option>\r\n                                )\r\n                            }\r\n                        </Select>\r\n                    )}\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Form.create()(Paso2);"]},"metadata":{},"sourceType":"module"}